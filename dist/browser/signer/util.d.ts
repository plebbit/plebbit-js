import PeerId from "peer-id";
export declare const generatePrivateKey: () => Promise<string>;
export declare const getPlebbitAddressFromPrivateKey: (privateKeyBase64: string) => Promise<string>;
export declare const getPlebbitAddressFromPublicKey: (publicKeyBase64: string) => Promise<string>;
export declare const getPlebbitAddressFromPublicKeyBuffer: (publicKeyBuffer: Uint8Array) => Promise<string>;
export declare const getBufferedPlebbitAddressFromPublicKey: (publicKeyBase64: string) => Promise<Uint8Array<ArrayBufferLike>>;
export declare const getIpfsKeyFromPrivateKey: (privateKeyBase64: string) => Promise<Uint8Array<ArrayBufferLike>>;
export declare const getPublicKeyFromPrivateKey: (privateKeyBase64: string) => Promise<string>;
export declare const getPeerIdFromPrivateKey: (privateKeyBase64: string) => Promise<PeerId>;
export declare const getPeerIdFromPublicKey: (publicKeyBase64: string) => Promise<PeerId>;
export declare const getPeerIdFromPublicKeyBuffer: (publicKeyBuffer: Uint8Array) => Promise<PeerId>;
export declare const convertBase58IpnsNameToBase36Cid: (ipnsName: string) => string;
export declare function convertBase32ToBase58btc(base32String: string): string;
export declare const getPlebbitAddressFromPublicKeySync: (publicKeyBase64: string) => string;
