import { RemoteSubplebbit } from "../../../../../subplebbit/remote-subplebbit.js";
import type { SubplebbitRole } from "../../../../../subplebbit/types.js";
import type { DecryptedChallengeRequestMessageTypeWithSubplebbitAuthor } from "../../../../../pubsub-messages/types.js";
import type { VotePubsubMessageWithSubplebbitAuthor } from "../../../../../publications/vote/types.js";
import type { CommentPubsubMessageWithSubplebbitAuthor } from "../../../../../publications/comment/types.js";
declare const testScore: (excludeScore: number | undefined, authorScore: number | undefined) => boolean;
declare const testFirstCommentTimestamp: (excludeTime: number | undefined, authorFirstCommentTimestamp: number | undefined) => boolean;
declare const isVote: (publication: DecryptedChallengeRequestMessageTypeWithSubplebbitAuthor["publication"]) => publication is VotePubsubMessageWithSubplebbitAuthor;
declare const isReply: (publication: DecryptedChallengeRequestMessageTypeWithSubplebbitAuthor["publication"]) => publication is CommentPubsubMessageWithSubplebbitAuthor;
declare const isPost: (publication: DecryptedChallengeRequestMessageTypeWithSubplebbitAuthor["publication"]) => publication is CommentPubsubMessageWithSubplebbitAuthor;
declare const testVote: (excludeVote: boolean | undefined, publication: DecryptedChallengeRequestMessageTypeWithSubplebbitAuthor["publication"]) => boolean;
declare const testReply: (excludeReply: boolean | undefined, publication: DecryptedChallengeRequestMessageTypeWithSubplebbitAuthor["publication"]) => boolean;
declare const testPost: (excludePost: boolean | undefined, publication: DecryptedChallengeRequestMessageTypeWithSubplebbitAuthor["publication"]) => boolean;
declare const testRole: (excludeRole: SubplebbitRole["role"][], authorAddress: string, subplebbitRoles: RemoteSubplebbit["roles"]) => boolean;
export { isVote, isReply, isPost, testVote, testReply, testPost, testScore, testFirstCommentTimestamp, testRole };
