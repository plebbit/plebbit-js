import http from "node:http";
export type RecordedRequest = {
    method: string;
    url: string;
    timestamp: number;
    headers: http.IncomingHttpHeaders;
    body: string;
};
export type MockHttpRouterOptions = {
    hostname?: string;
    port?: number;
};
export declare class MockHttpRouter {
    private _server;
    private _hostname;
    private _port;
    private _baseUrl?;
    private _providerRecords;
    private _requests;
    constructor(options?: MockHttpRouterOptions);
    get url(): string;
    get hostname(): string;
    get port(): number;
    get requests(): RecordedRequest[];
    start(): Promise<void>;
    destroy(): Promise<void>;
    clearRequests(): void;
    hasProvidersFor(cid: string): boolean;
    getProvidersFor(cid: string): any[];
    private _handleRequest;
    private _buildCorsHeaders;
    private _buildUrl;
    private _recordRequest;
    private _readBody;
    private _isProvidersPublishPath;
    private _isProvidersGetPath;
    private _handleProviderPublish;
    private _handleProviderGet;
    private _filterProviders;
    private _filterAddrs;
    private _filterProtocols;
    private _writeProvidersResponse;
    private _getLatestTimestamp;
    private _getAddrsReference;
    private _addrMatches;
    private _parseFilterParam;
    private _getProviderProtocols;
    private _addProviderRecord;
    private _getActiveProviders;
    private _getCidVariants;
    private _normalizeProvider;
    private _extractAddrs;
    private _cloneProvider;
}
