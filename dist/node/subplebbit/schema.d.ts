import { z } from "zod";
import { LocalSubplebbit } from "../runtime/node/subplebbit/local-subplebbit.js";
import type { DecryptedChallengeRequestMessageTypeWithSubplebbitAuthor } from "../pubsub-messages/types.js";
export declare const SubplebbitEncryptionSchema: z.ZodObject<{
    type: z.ZodString;
    publicKey: z.ZodString;
}, z.core.$loose>;
export declare const SubplebbitRoleNames: z.ZodEnum<{
    owner: "owner";
    admin: "admin";
    moderator: "moderator";
}>;
export declare const SubplebbitRoleSchema: z.ZodObject<{
    role: z.ZodUnion<[z.ZodEnum<{
        owner: "owner";
        admin: "admin";
        moderator: "moderator";
    }>, z.ZodString]>;
}, z.core.$loose>;
export declare const PubsubTopicSchema: z.ZodString;
export declare const SubplebbitSuggestedSchema: z.ZodObject<{
    primaryColor: z.ZodOptional<z.ZodString>;
    secondaryColor: z.ZodOptional<z.ZodString>;
    avatarUrl: z.ZodOptional<z.ZodString>;
    bannerUrl: z.ZodOptional<z.ZodString>;
    backgroundUrl: z.ZodOptional<z.ZodString>;
    language: z.ZodOptional<z.ZodString>;
}, z.core.$loose>;
export declare const SubplebbitFeaturesSchema: z.ZodObject<{
    noVideos: z.ZodOptional<z.ZodBoolean>;
    noSpoilers: z.ZodOptional<z.ZodBoolean>;
    noImages: z.ZodOptional<z.ZodBoolean>;
    noVideoReplies: z.ZodOptional<z.ZodBoolean>;
    noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
    noImageReplies: z.ZodOptional<z.ZodBoolean>;
    noPolls: z.ZodOptional<z.ZodBoolean>;
    noCrossposts: z.ZodOptional<z.ZodBoolean>;
    noAuthors: z.ZodOptional<z.ZodBoolean>;
    anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
    noNestedReplies: z.ZodOptional<z.ZodBoolean>;
    safeForWork: z.ZodOptional<z.ZodBoolean>;
    authorFlairs: z.ZodOptional<z.ZodBoolean>;
    requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
    postFlairs: z.ZodOptional<z.ZodBoolean>;
    requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
    noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
    noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
    markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
    markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
    noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
    noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
    noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
    noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
    noUpvotes: z.ZodOptional<z.ZodBoolean>;
    noDownvotes: z.ZodOptional<z.ZodBoolean>;
    requirePostLink: z.ZodOptional<z.ZodBoolean>;
    requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
}, z.core.$loose>;
export declare const ChallengeOptionInputSchema: z.ZodObject<{
    option: z.ZodString;
    label: z.ZodString;
    default: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    placeholder: z.ZodOptional<z.ZodString>;
    required: z.ZodOptional<z.ZodBoolean>;
}, z.core.$loose>;
export declare const ChallengeResultSchema: z.ZodUnion<[z.ZodObject<{
    success: z.ZodLiteral<true>;
}, z.core.$strip>, z.ZodObject<{
    success: z.ZodLiteral<false>;
    error: z.ZodString;
}, z.core.$strip>]>;
export declare const ChallengeFromGetChallengeSchema: z.ZodObject<{
    challenge: z.ZodString;
    verify: z.ZodFunction<z.ZodTuple<readonly [z.ZodLazy<z.ZodString>], null>, z.ZodPromise<z.ZodUnion<[z.ZodObject<{
        success: z.ZodLiteral<true>;
    }, z.core.$strip>, z.ZodObject<{
        success: z.ZodLiteral<false>;
        error: z.ZodString;
    }, z.core.$strip>]>>>;
    type: z.ZodString;
    caseInsensitive: z.ZodOptional<z.ZodBoolean>;
}, z.core.$strict>;
export declare const ResultOfGetChallengeSchema: z.ZodUnion<[z.ZodObject<{
    challenge: z.ZodString;
    verify: z.ZodFunction<z.ZodTuple<readonly [z.ZodLazy<z.ZodString>], null>, z.ZodPromise<z.ZodUnion<[z.ZodObject<{
        success: z.ZodLiteral<true>;
    }, z.core.$strip>, z.ZodObject<{
        success: z.ZodLiteral<false>;
        error: z.ZodString;
    }, z.core.$strip>]>>>;
    type: z.ZodString;
    caseInsensitive: z.ZodOptional<z.ZodBoolean>;
}, z.core.$strict>, z.ZodUnion<[z.ZodObject<{
    success: z.ZodLiteral<true>;
}, z.core.$strip>, z.ZodObject<{
    success: z.ZodLiteral<false>;
    error: z.ZodString;
}, z.core.$strip>]>]>;
export declare const ChallengeExcludeSubplebbitSchema: z.ZodObject<{
    addresses: z.ZodArray<z.ZodString>;
    maxCommentCids: z.ZodNumber;
    postScore: z.ZodOptional<z.ZodNumber>;
    replyScore: z.ZodOptional<z.ZodNumber>;
    firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
}, z.core.$strict>;
export declare const ChallengeExcludePublicationTypeSchema: z.ZodObject<{
    post: z.ZodOptional<z.ZodBoolean>;
    reply: z.ZodOptional<z.ZodBoolean>;
    vote: z.ZodOptional<z.ZodBoolean>;
    commentEdit: z.ZodOptional<z.ZodBoolean>;
    commentModeration: z.ZodOptional<z.ZodBoolean>;
    subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
}, z.core.$loose>;
export declare const ChallengeExcludeSchema: z.ZodObject<{
    subplebbit: z.ZodOptional<z.ZodObject<{
        addresses: z.ZodArray<z.ZodString>;
        maxCommentCids: z.ZodNumber;
        postScore: z.ZodOptional<z.ZodNumber>;
        replyScore: z.ZodOptional<z.ZodNumber>;
        firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
    }, z.core.$strict>>;
    postScore: z.ZodOptional<z.ZodNumber>;
    replyScore: z.ZodOptional<z.ZodNumber>;
    firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
    challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
    role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
        owner: "owner";
        admin: "admin";
        moderator: "moderator";
    }>, z.ZodString]>>>;
    address: z.ZodOptional<z.ZodArray<z.ZodString>>;
    rateLimit: z.ZodOptional<z.ZodNumber>;
    rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
    publicationType: z.ZodOptional<z.ZodObject<{
        post: z.ZodOptional<z.ZodBoolean>;
        reply: z.ZodOptional<z.ZodBoolean>;
        vote: z.ZodOptional<z.ZodBoolean>;
        commentEdit: z.ZodOptional<z.ZodBoolean>;
        commentModeration: z.ZodOptional<z.ZodBoolean>;
        subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
}, z.core.$loose>;
export declare const SubplebbitChallengeSettingSchema: z.ZodObject<{
    path: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
        subplebbit: z.ZodOptional<z.ZodObject<{
            addresses: z.ZodArray<z.ZodString>;
            maxCommentCids: z.ZodNumber;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
        }, z.core.$strict>>;
        postScore: z.ZodOptional<z.ZodNumber>;
        replyScore: z.ZodOptional<z.ZodNumber>;
        firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
        challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
        role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>>>;
        address: z.ZodOptional<z.ZodArray<z.ZodString>>;
        rateLimit: z.ZodOptional<z.ZodNumber>;
        rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
        publicationType: z.ZodOptional<z.ZodObject<{
            post: z.ZodOptional<z.ZodBoolean>;
            reply: z.ZodOptional<z.ZodBoolean>;
            vote: z.ZodOptional<z.ZodBoolean>;
            commentEdit: z.ZodOptional<z.ZodBoolean>;
            commentModeration: z.ZodOptional<z.ZodBoolean>;
            subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$loose>>;
    }, z.core.$loose>>>;
    description: z.ZodOptional<z.ZodString>;
    pendingApproval: z.ZodOptional<z.ZodBoolean>;
}, z.core.$strict>;
export declare const ChallengeFileSchema: z.ZodObject<{
    optionInputs: z.ZodOptional<z.ZodArray<z.ZodObject<{
        option: z.ZodString;
        label: z.ZodString;
        default: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        placeholder: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    type: z.ZodString;
    challenge: z.ZodOptional<z.ZodString>;
    caseInsensitive: z.ZodOptional<z.ZodBoolean>;
    description: z.ZodOptional<z.ZodString>;
    getChallenge: z.ZodFunction<z.ZodTuple<readonly [z.ZodObject<{
        path: z.ZodOptional<z.ZodString>;
        name: z.ZodOptional<z.ZodString>;
        options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
            subplebbit: z.ZodOptional<z.ZodObject<{
                addresses: z.ZodArray<z.ZodString>;
                maxCommentCids: z.ZodNumber;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strict>>;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
            role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                owner: "owner";
                admin: "admin";
                moderator: "moderator";
            }>, z.ZodString]>>>;
            address: z.ZodOptional<z.ZodArray<z.ZodString>>;
            rateLimit: z.ZodOptional<z.ZodNumber>;
            rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
            publicationType: z.ZodOptional<z.ZodObject<{
                post: z.ZodOptional<z.ZodBoolean>;
                reply: z.ZodOptional<z.ZodBoolean>;
                vote: z.ZodOptional<z.ZodBoolean>;
                commentEdit: z.ZodOptional<z.ZodBoolean>;
                commentModeration: z.ZodOptional<z.ZodBoolean>;
                subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$loose>>;
        }, z.core.$loose>>>;
        description: z.ZodOptional<z.ZodString>;
        pendingApproval: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$strict>, z.ZodCustom<DecryptedChallengeRequestMessageTypeWithSubplebbitAuthor, DecryptedChallengeRequestMessageTypeWithSubplebbitAuthor>, z.ZodNumber, z.ZodCustom<LocalSubplebbit, LocalSubplebbit>], null>, z.ZodPromise<z.ZodUnion<[z.ZodObject<{
        challenge: z.ZodString;
        verify: z.ZodFunction<z.ZodTuple<readonly [z.ZodLazy<z.ZodString>], null>, z.ZodPromise<z.ZodUnion<[z.ZodObject<{
            success: z.ZodLiteral<true>;
        }, z.core.$strip>, z.ZodObject<{
            success: z.ZodLiteral<false>;
            error: z.ZodString;
        }, z.core.$strip>]>>>;
        type: z.ZodString;
        caseInsensitive: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$strict>, z.ZodUnion<[z.ZodObject<{
        success: z.ZodLiteral<true>;
    }, z.core.$strip>, z.ZodObject<{
        success: z.ZodLiteral<false>;
        error: z.ZodString;
    }, z.core.$strip>]>]>>>;
}, z.core.$strict>;
export declare const SubplebbitChallengeSchema: z.ZodObject<{
    exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
        subplebbit: z.ZodOptional<z.ZodObject<{
            addresses: z.ZodArray<z.ZodString>;
            maxCommentCids: z.ZodNumber;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
        }, z.core.$strict>>;
        postScore: z.ZodOptional<z.ZodNumber>;
        replyScore: z.ZodOptional<z.ZodNumber>;
        firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
        challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
        role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>>>;
        address: z.ZodOptional<z.ZodArray<z.ZodString>>;
        rateLimit: z.ZodOptional<z.ZodNumber>;
        rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
        publicationType: z.ZodOptional<z.ZodObject<{
            post: z.ZodOptional<z.ZodBoolean>;
            reply: z.ZodOptional<z.ZodBoolean>;
            vote: z.ZodOptional<z.ZodBoolean>;
            commentEdit: z.ZodOptional<z.ZodBoolean>;
            commentModeration: z.ZodOptional<z.ZodBoolean>;
            subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$loose>>;
    }, z.core.$loose>>>;
    description: z.ZodOptional<z.ZodString>;
    challenge: z.ZodOptional<z.ZodString>;
    type: z.ZodString;
    caseInsensitive: z.ZodOptional<z.ZodBoolean>;
    pendingApproval: z.ZodOptional<z.ZodBoolean>;
}, z.core.$loose>;
export declare const ChallengeFileFactorySchema: z.ZodFunction<z.ZodTuple<readonly [z.ZodObject<{
    path: z.ZodOptional<z.ZodString>;
    name: z.ZodOptional<z.ZodString>;
    options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
        subplebbit: z.ZodOptional<z.ZodObject<{
            addresses: z.ZodArray<z.ZodString>;
            maxCommentCids: z.ZodNumber;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
        }, z.core.$strict>>;
        postScore: z.ZodOptional<z.ZodNumber>;
        replyScore: z.ZodOptional<z.ZodNumber>;
        firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
        challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
        role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>>>;
        address: z.ZodOptional<z.ZodArray<z.ZodString>>;
        rateLimit: z.ZodOptional<z.ZodNumber>;
        rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
        publicationType: z.ZodOptional<z.ZodObject<{
            post: z.ZodOptional<z.ZodBoolean>;
            reply: z.ZodOptional<z.ZodBoolean>;
            vote: z.ZodOptional<z.ZodBoolean>;
            commentEdit: z.ZodOptional<z.ZodBoolean>;
            commentModeration: z.ZodOptional<z.ZodBoolean>;
            subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$loose>>;
    }, z.core.$loose>>>;
    description: z.ZodOptional<z.ZodString>;
    pendingApproval: z.ZodOptional<z.ZodBoolean>;
}, z.core.$strict>], null>, z.ZodObject<{
    optionInputs: z.ZodOptional<z.ZodArray<z.ZodObject<{
        option: z.ZodString;
        label: z.ZodString;
        default: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        placeholder: z.ZodOptional<z.ZodString>;
        required: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    type: z.ZodString;
    challenge: z.ZodOptional<z.ZodString>;
    caseInsensitive: z.ZodOptional<z.ZodBoolean>;
    description: z.ZodOptional<z.ZodString>;
    getChallenge: z.ZodFunction<z.ZodTuple<readonly [z.ZodObject<{
        path: z.ZodOptional<z.ZodString>;
        name: z.ZodOptional<z.ZodString>;
        options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
            subplebbit: z.ZodOptional<z.ZodObject<{
                addresses: z.ZodArray<z.ZodString>;
                maxCommentCids: z.ZodNumber;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strict>>;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
            role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                owner: "owner";
                admin: "admin";
                moderator: "moderator";
            }>, z.ZodString]>>>;
            address: z.ZodOptional<z.ZodArray<z.ZodString>>;
            rateLimit: z.ZodOptional<z.ZodNumber>;
            rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
            publicationType: z.ZodOptional<z.ZodObject<{
                post: z.ZodOptional<z.ZodBoolean>;
                reply: z.ZodOptional<z.ZodBoolean>;
                vote: z.ZodOptional<z.ZodBoolean>;
                commentEdit: z.ZodOptional<z.ZodBoolean>;
                commentModeration: z.ZodOptional<z.ZodBoolean>;
                subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$loose>>;
        }, z.core.$loose>>>;
        description: z.ZodOptional<z.ZodString>;
        pendingApproval: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$strict>, z.ZodCustom<DecryptedChallengeRequestMessageTypeWithSubplebbitAuthor, DecryptedChallengeRequestMessageTypeWithSubplebbitAuthor>, z.ZodNumber, z.ZodCustom<LocalSubplebbit, LocalSubplebbit>], null>, z.ZodPromise<z.ZodUnion<[z.ZodObject<{
        challenge: z.ZodString;
        verify: z.ZodFunction<z.ZodTuple<readonly [z.ZodLazy<z.ZodString>], null>, z.ZodPromise<z.ZodUnion<[z.ZodObject<{
            success: z.ZodLiteral<true>;
        }, z.core.$strip>, z.ZodObject<{
            success: z.ZodLiteral<false>;
            error: z.ZodString;
        }, z.core.$strip>]>>>;
        type: z.ZodString;
        caseInsensitive: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$strict>, z.ZodUnion<[z.ZodObject<{
        success: z.ZodLiteral<true>;
    }, z.core.$strip>, z.ZodObject<{
        success: z.ZodLiteral<false>;
        error: z.ZodString;
    }, z.core.$strip>]>]>>>;
}, z.core.$strict>>;
export declare const SubplebbitIpfsSchema: z.ZodObject<{
    posts: z.ZodOptional<z.ZodObject<{
        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodObject<{
            comments: z.ZodLazy<z.ZodArray<z.ZodObject<{
                comment: z.ZodObject<{
                    timestamp: z.ZodNumber;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    subplebbitAddress: z.ZodString;
                    protocolVersion: z.ZodString;
                    content: z.ZodOptional<z.ZodString>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    link: z.ZodOptional<z.ZodString>;
                    title: z.ZodOptional<z.ZodString>;
                    linkWidth: z.ZodOptional<z.ZodNumber>;
                    linkHeight: z.ZodOptional<z.ZodNumber>;
                    linkHtmlTagName: z.ZodOptional<z.ZodString>;
                    parentCid: z.ZodOptional<z.ZodString>;
                    postCid: z.ZodOptional<z.ZodString>;
                    author: z.ZodObject<{
                        address: z.ZodString;
                        previousCommentCid: z.ZodOptional<z.ZodString>;
                        displayName: z.ZodOptional<z.ZodString>;
                        wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                            address: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$strip>>>;
                        avatar: z.ZodOptional<z.ZodObject<{
                            chainTicker: z.ZodString;
                            address: z.ZodString;
                            id: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$loose>>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                    }, z.core.$loose>;
                    depth: z.ZodNumber;
                    thumbnailUrl: z.ZodOptional<z.ZodString>;
                    thumbnailUrlWidth: z.ZodOptional<z.ZodNumber>;
                    thumbnailUrlHeight: z.ZodOptional<z.ZodNumber>;
                    previousCid: z.ZodOptional<z.ZodString>;
                }, z.core.$loose>;
                commentUpdate: z.ZodObject<{
                    cid: z.ZodString;
                    upvoteCount: z.ZodNumber;
                    downvoteCount: z.ZodNumber;
                    replyCount: z.ZodNumber;
                    childCount: z.ZodOptional<z.ZodNumber>;
                    edit: z.ZodOptional<z.ZodObject<{
                        timestamp: z.ZodNumber;
                        signature: z.ZodObject<{
                            type: z.ZodString;
                            signature: z.ZodString;
                            publicKey: z.ZodString;
                            signedPropertyNames: z.ZodArray<z.ZodString>;
                        }, z.core.$strip>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                        subplebbitAddress: z.ZodString;
                        protocolVersion: z.ZodString;
                        commentCid: z.ZodString;
                        content: z.ZodOptional<z.ZodString>;
                        deleted: z.ZodOptional<z.ZodBoolean>;
                        spoiler: z.ZodOptional<z.ZodBoolean>;
                        nsfw: z.ZodOptional<z.ZodBoolean>;
                        reason: z.ZodOptional<z.ZodString>;
                        author: z.ZodObject<{
                            address: z.ZodString;
                            previousCommentCid: z.ZodOptional<z.ZodString>;
                            displayName: z.ZodOptional<z.ZodString>;
                            wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                                address: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$strip>>>;
                            avatar: z.ZodOptional<z.ZodObject<{
                                chainTicker: z.ZodString;
                                address: z.ZodString;
                                id: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$loose>>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                        }, z.core.$loose>;
                    }, z.core.$loose>>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    pinned: z.ZodOptional<z.ZodBoolean>;
                    locked: z.ZodOptional<z.ZodBoolean>;
                    removed: z.ZodOptional<z.ZodBoolean>;
                    reason: z.ZodOptional<z.ZodString>;
                    approved: z.ZodOptional<z.ZodBoolean>;
                    updatedAt: z.ZodNumber;
                    author: z.ZodOptional<z.ZodObject<{
                        subplebbit: z.ZodOptional<z.ZodObject<{
                            postScore: z.ZodNumber;
                            replyScore: z.ZodNumber;
                            banExpiresAt: z.ZodOptional<z.ZodNumber>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                            firstCommentTimestamp: z.ZodNumber;
                            lastCommentCid: z.ZodString;
                        }, z.core.$loose>>;
                    }, z.core.$loose>>;
                    lastChildCid: z.ZodOptional<z.ZodString>;
                    lastReplyTimestamp: z.ZodOptional<z.ZodNumber>;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    protocolVersion: z.ZodString;
                    replies: z.ZodOptional<z.ZodObject<{
                        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodObject</*elided*/ any, z.core.$strip>>;
                        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodString>>;
                    }, z.core.$strip>>;
                }, z.core.$loose>;
            }, z.core.$strip>>>;
            nextCid: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>;
        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodString>>;
    }, z.core.$strip>>;
    modQueue: z.ZodOptional<z.ZodObject<{
        pageCids: z.ZodRecord<z.ZodString, z.ZodString>;
    }, z.core.$strip>>;
    challenges: z.ZodArray<z.ZodObject<{
        exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
            subplebbit: z.ZodOptional<z.ZodObject<{
                addresses: z.ZodArray<z.ZodString>;
                maxCommentCids: z.ZodNumber;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strict>>;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
            role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                owner: "owner";
                admin: "admin";
                moderator: "moderator";
            }>, z.ZodString]>>>;
            address: z.ZodOptional<z.ZodArray<z.ZodString>>;
            rateLimit: z.ZodOptional<z.ZodNumber>;
            rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
            publicationType: z.ZodOptional<z.ZodObject<{
                post: z.ZodOptional<z.ZodBoolean>;
                reply: z.ZodOptional<z.ZodBoolean>;
                vote: z.ZodOptional<z.ZodBoolean>;
                commentEdit: z.ZodOptional<z.ZodBoolean>;
                commentModeration: z.ZodOptional<z.ZodBoolean>;
                subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$loose>>;
        }, z.core.$loose>>>;
        description: z.ZodOptional<z.ZodString>;
        challenge: z.ZodOptional<z.ZodString>;
        type: z.ZodString;
        caseInsensitive: z.ZodOptional<z.ZodBoolean>;
        pendingApproval: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
    signature: z.ZodObject<{
        type: z.ZodString;
        signature: z.ZodString;
        publicKey: z.ZodString;
        signedPropertyNames: z.ZodArray<z.ZodString>;
    }, z.core.$strip>;
    encryption: z.ZodObject<{
        type: z.ZodString;
        publicKey: z.ZodString;
    }, z.core.$loose>;
    address: z.ZodString;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
    pubsubTopic: z.ZodOptional<z.ZodString>;
    statsCid: z.ZodString;
    protocolVersion: z.ZodString;
    postUpdates: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    roles: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>>>;
    rules: z.ZodOptional<z.ZodArray<z.ZodString>>;
    lastPostCid: z.ZodOptional<z.ZodString>;
    lastCommentCid: z.ZodOptional<z.ZodString>;
    features: z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
    suggested: z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>;
    flairs: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>;
}, z.core.$strict>;
export declare const SubplebbitSignedPropertyNames: ("address" | "protocolVersion" | "lastCommentCid" | "title" | "updatedAt" | "encryption" | "createdAt" | "statsCid" | "posts" | "modQueue" | "challenges" | "description" | "pubsubTopic" | "postUpdates" | "roles" | "rules" | "lastPostCid" | "features" | "suggested" | "flairs")[];
export declare const RpcRemoteSubplebbitUpdateEventResultSchema: z.ZodObject<{
    subplebbit: z.ZodObject<{
        posts: z.ZodOptional<z.ZodObject<{
            pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                hot: "hot";
                new: "new";
                topHour: "topHour";
                topDay: "topDay";
                topWeek: "topWeek";
                topMonth: "topMonth";
                topYear: "topYear";
                topAll: "topAll";
                active: "active";
            }>, z.ZodString]>, z.ZodObject<{
                comments: z.ZodLazy<z.ZodArray<z.ZodObject<{
                    comment: z.ZodObject<{
                        timestamp: z.ZodNumber;
                        signature: z.ZodObject<{
                            type: z.ZodString;
                            signature: z.ZodString;
                            publicKey: z.ZodString;
                            signedPropertyNames: z.ZodArray<z.ZodString>;
                        }, z.core.$strip>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                        subplebbitAddress: z.ZodString;
                        protocolVersion: z.ZodString;
                        content: z.ZodOptional<z.ZodString>;
                        spoiler: z.ZodOptional<z.ZodBoolean>;
                        nsfw: z.ZodOptional<z.ZodBoolean>;
                        link: z.ZodOptional<z.ZodString>;
                        title: z.ZodOptional<z.ZodString>;
                        linkWidth: z.ZodOptional<z.ZodNumber>;
                        linkHeight: z.ZodOptional<z.ZodNumber>;
                        linkHtmlTagName: z.ZodOptional<z.ZodString>;
                        parentCid: z.ZodOptional<z.ZodString>;
                        postCid: z.ZodOptional<z.ZodString>;
                        author: z.ZodObject<{
                            address: z.ZodString;
                            previousCommentCid: z.ZodOptional<z.ZodString>;
                            displayName: z.ZodOptional<z.ZodString>;
                            wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                                address: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$strip>>>;
                            avatar: z.ZodOptional<z.ZodObject<{
                                chainTicker: z.ZodString;
                                address: z.ZodString;
                                id: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$loose>>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                        }, z.core.$loose>;
                        depth: z.ZodNumber;
                        thumbnailUrl: z.ZodOptional<z.ZodString>;
                        thumbnailUrlWidth: z.ZodOptional<z.ZodNumber>;
                        thumbnailUrlHeight: z.ZodOptional<z.ZodNumber>;
                        previousCid: z.ZodOptional<z.ZodString>;
                    }, z.core.$loose>;
                    commentUpdate: z.ZodObject<{
                        cid: z.ZodString;
                        upvoteCount: z.ZodNumber;
                        downvoteCount: z.ZodNumber;
                        replyCount: z.ZodNumber;
                        childCount: z.ZodOptional<z.ZodNumber>;
                        edit: z.ZodOptional<z.ZodObject<{
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                type: z.ZodString;
                                signature: z.ZodString;
                                publicKey: z.ZodString;
                                signedPropertyNames: z.ZodArray<z.ZodString>;
                            }, z.core.$strip>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                            subplebbitAddress: z.ZodString;
                            protocolVersion: z.ZodString;
                            commentCid: z.ZodString;
                            content: z.ZodOptional<z.ZodString>;
                            deleted: z.ZodOptional<z.ZodBoolean>;
                            spoiler: z.ZodOptional<z.ZodBoolean>;
                            nsfw: z.ZodOptional<z.ZodBoolean>;
                            reason: z.ZodOptional<z.ZodString>;
                            author: z.ZodObject<{
                                address: z.ZodString;
                                previousCommentCid: z.ZodOptional<z.ZodString>;
                                displayName: z.ZodOptional<z.ZodString>;
                                wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                                    address: z.ZodString;
                                    timestamp: z.ZodNumber;
                                    signature: z.ZodObject<{
                                        signature: z.ZodString;
                                        type: z.ZodString;
                                    }, z.core.$strip>;
                                }, z.core.$strip>>>;
                                avatar: z.ZodOptional<z.ZodObject<{
                                    chainTicker: z.ZodString;
                                    address: z.ZodString;
                                    id: z.ZodString;
                                    timestamp: z.ZodNumber;
                                    signature: z.ZodObject<{
                                        signature: z.ZodString;
                                        type: z.ZodString;
                                    }, z.core.$strip>;
                                }, z.core.$loose>>;
                                flair: z.ZodOptional<z.ZodObject<{
                                    text: z.ZodString;
                                    backgroundColor: z.ZodOptional<z.ZodString>;
                                    textColor: z.ZodOptional<z.ZodString>;
                                    expiresAt: z.ZodOptional<z.ZodNumber>;
                                }, z.core.$loose>>;
                            }, z.core.$loose>;
                        }, z.core.$loose>>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                        spoiler: z.ZodOptional<z.ZodBoolean>;
                        nsfw: z.ZodOptional<z.ZodBoolean>;
                        pinned: z.ZodOptional<z.ZodBoolean>;
                        locked: z.ZodOptional<z.ZodBoolean>;
                        removed: z.ZodOptional<z.ZodBoolean>;
                        reason: z.ZodOptional<z.ZodString>;
                        approved: z.ZodOptional<z.ZodBoolean>;
                        updatedAt: z.ZodNumber;
                        author: z.ZodOptional<z.ZodObject<{
                            subplebbit: z.ZodOptional<z.ZodObject<{
                                postScore: z.ZodNumber;
                                replyScore: z.ZodNumber;
                                banExpiresAt: z.ZodOptional<z.ZodNumber>;
                                flair: z.ZodOptional<z.ZodObject<{
                                    text: z.ZodString;
                                    backgroundColor: z.ZodOptional<z.ZodString>;
                                    textColor: z.ZodOptional<z.ZodString>;
                                    expiresAt: z.ZodOptional<z.ZodNumber>;
                                }, z.core.$loose>>;
                                firstCommentTimestamp: z.ZodNumber;
                                lastCommentCid: z.ZodString;
                            }, z.core.$loose>>;
                        }, z.core.$loose>>;
                        lastChildCid: z.ZodOptional<z.ZodString>;
                        lastReplyTimestamp: z.ZodOptional<z.ZodNumber>;
                        signature: z.ZodObject<{
                            type: z.ZodString;
                            signature: z.ZodString;
                            publicKey: z.ZodString;
                            signedPropertyNames: z.ZodArray<z.ZodString>;
                        }, z.core.$strip>;
                        protocolVersion: z.ZodString;
                        replies: z.ZodOptional<z.ZodObject<{
                            pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                                new: "new";
                                best: "best";
                                old: "old";
                                newFlat: "newFlat";
                                oldFlat: "oldFlat";
                            }>, z.ZodString]>, z.ZodObject</*elided*/ any, z.core.$strip>>;
                            pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                                new: "new";
                                best: "best";
                                old: "old";
                                newFlat: "newFlat";
                                oldFlat: "oldFlat";
                            }>, z.ZodString]>, z.ZodString>>;
                        }, z.core.$strip>>;
                    }, z.core.$loose>;
                }, z.core.$strip>>>;
                nextCid: z.ZodOptional<z.ZodString>;
            }, z.core.$strip>>;
            pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                hot: "hot";
                new: "new";
                topHour: "topHour";
                topDay: "topDay";
                topWeek: "topWeek";
                topMonth: "topMonth";
                topYear: "topYear";
                topAll: "topAll";
                active: "active";
            }>, z.ZodString]>, z.ZodString>>;
        }, z.core.$strip>>;
        modQueue: z.ZodOptional<z.ZodObject<{
            pageCids: z.ZodRecord<z.ZodString, z.ZodString>;
        }, z.core.$strip>>;
        challenges: z.ZodArray<z.ZodObject<{
            exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
                subplebbit: z.ZodOptional<z.ZodObject<{
                    addresses: z.ZodArray<z.ZodString>;
                    maxCommentCids: z.ZodNumber;
                    postScore: z.ZodOptional<z.ZodNumber>;
                    replyScore: z.ZodOptional<z.ZodNumber>;
                    firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
                }, z.core.$strict>>;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
                challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
                role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                    owner: "owner";
                    admin: "admin";
                    moderator: "moderator";
                }>, z.ZodString]>>>;
                address: z.ZodOptional<z.ZodArray<z.ZodString>>;
                rateLimit: z.ZodOptional<z.ZodNumber>;
                rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
                publicationType: z.ZodOptional<z.ZodObject<{
                    post: z.ZodOptional<z.ZodBoolean>;
                    reply: z.ZodOptional<z.ZodBoolean>;
                    vote: z.ZodOptional<z.ZodBoolean>;
                    commentEdit: z.ZodOptional<z.ZodBoolean>;
                    commentModeration: z.ZodOptional<z.ZodBoolean>;
                    subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$loose>>;
            }, z.core.$loose>>>;
            description: z.ZodOptional<z.ZodString>;
            challenge: z.ZodOptional<z.ZodString>;
            type: z.ZodString;
            caseInsensitive: z.ZodOptional<z.ZodBoolean>;
            pendingApproval: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$loose>>;
        signature: z.ZodObject<{
            type: z.ZodString;
            signature: z.ZodString;
            publicKey: z.ZodString;
            signedPropertyNames: z.ZodArray<z.ZodString>;
        }, z.core.$strip>;
        encryption: z.ZodObject<{
            type: z.ZodString;
            publicKey: z.ZodString;
        }, z.core.$loose>;
        address: z.ZodString;
        createdAt: z.ZodNumber;
        updatedAt: z.ZodNumber;
        pubsubTopic: z.ZodOptional<z.ZodString>;
        statsCid: z.ZodString;
        protocolVersion: z.ZodString;
        postUpdates: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        title: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        roles: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
            role: z.ZodUnion<[z.ZodEnum<{
                owner: "owner";
                admin: "admin";
                moderator: "moderator";
            }>, z.ZodString]>;
        }, z.core.$loose>>>;
        rules: z.ZodOptional<z.ZodArray<z.ZodString>>;
        lastPostCid: z.ZodOptional<z.ZodString>;
        lastCommentCid: z.ZodOptional<z.ZodString>;
        features: z.ZodOptional<z.ZodObject<{
            noVideos: z.ZodOptional<z.ZodBoolean>;
            noSpoilers: z.ZodOptional<z.ZodBoolean>;
            noImages: z.ZodOptional<z.ZodBoolean>;
            noVideoReplies: z.ZodOptional<z.ZodBoolean>;
            noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
            noImageReplies: z.ZodOptional<z.ZodBoolean>;
            noPolls: z.ZodOptional<z.ZodBoolean>;
            noCrossposts: z.ZodOptional<z.ZodBoolean>;
            noAuthors: z.ZodOptional<z.ZodBoolean>;
            anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
            noNestedReplies: z.ZodOptional<z.ZodBoolean>;
            safeForWork: z.ZodOptional<z.ZodBoolean>;
            authorFlairs: z.ZodOptional<z.ZodBoolean>;
            requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
            postFlairs: z.ZodOptional<z.ZodBoolean>;
            requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
            noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
            noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
            markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
            markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
            noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
            noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
            noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
            noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
            noUpvotes: z.ZodOptional<z.ZodBoolean>;
            noDownvotes: z.ZodOptional<z.ZodBoolean>;
            requirePostLink: z.ZodOptional<z.ZodBoolean>;
            requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$loose>>;
        suggested: z.ZodOptional<z.ZodObject<{
            primaryColor: z.ZodOptional<z.ZodString>;
            secondaryColor: z.ZodOptional<z.ZodString>;
            avatarUrl: z.ZodOptional<z.ZodString>;
            bannerUrl: z.ZodOptional<z.ZodString>;
            backgroundUrl: z.ZodOptional<z.ZodString>;
            language: z.ZodOptional<z.ZodString>;
        }, z.core.$loose>>;
        flairs: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
            text: z.ZodString;
            backgroundColor: z.ZodOptional<z.ZodString>;
            textColor: z.ZodOptional<z.ZodString>;
            expiresAt: z.ZodOptional<z.ZodNumber>;
        }, z.core.$loose>>>>;
    }, z.core.$loose>;
    updateCid: z.ZodString;
    updatingState: z.ZodOptional<z.ZodCustom<import("./types.js").SubplebbitUpdatingState, import("./types.js").SubplebbitUpdatingState>>;
}, z.core.$strip>;
export declare const CreateRemoteSubplebbitOptionsSchema: z.ZodObject<{
    modQueue: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        pageCids: z.ZodRecord<z.ZodString, z.ZodString>;
    }, z.core.$strip>>>;
    challenges: z.ZodOptional<z.ZodArray<z.ZodObject<{
        exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
            subplebbit: z.ZodOptional<z.ZodObject<{
                addresses: z.ZodArray<z.ZodString>;
                maxCommentCids: z.ZodNumber;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strict>>;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
            role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                owner: "owner";
                admin: "admin";
                moderator: "moderator";
            }>, z.ZodString]>>>;
            address: z.ZodOptional<z.ZodArray<z.ZodString>>;
            rateLimit: z.ZodOptional<z.ZodNumber>;
            rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
            publicationType: z.ZodOptional<z.ZodObject<{
                post: z.ZodOptional<z.ZodBoolean>;
                reply: z.ZodOptional<z.ZodBoolean>;
                vote: z.ZodOptional<z.ZodBoolean>;
                commentEdit: z.ZodOptional<z.ZodBoolean>;
                commentModeration: z.ZodOptional<z.ZodBoolean>;
                subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$loose>>;
        }, z.core.$loose>>>;
        description: z.ZodOptional<z.ZodString>;
        challenge: z.ZodOptional<z.ZodString>;
        type: z.ZodString;
        caseInsensitive: z.ZodOptional<z.ZodBoolean>;
        pendingApproval: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    signature: z.ZodOptional<z.ZodObject<{
        type: z.ZodString;
        signature: z.ZodString;
        publicKey: z.ZodString;
        signedPropertyNames: z.ZodArray<z.ZodString>;
    }, z.core.$strip>>;
    encryption: z.ZodOptional<z.ZodObject<{
        type: z.ZodString;
        publicKey: z.ZodString;
    }, z.core.$loose>>;
    createdAt: z.ZodOptional<z.ZodNumber>;
    updatedAt: z.ZodOptional<z.ZodNumber>;
    pubsubTopic: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    statsCid: z.ZodOptional<z.ZodString>;
    protocolVersion: z.ZodOptional<z.ZodString>;
    postUpdates: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>>;
    title: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    roles: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>>>>;
    rules: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString>>>;
    lastPostCid: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    lastCommentCid: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    features: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    suggested: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>>;
    flairs: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>>;
    address: z.ZodString;
    posts: z.ZodUnion<[z.ZodOptional<z.ZodObject<{
        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodObject<{
            comments: z.ZodLazy<z.ZodArray<z.ZodObject<{
                comment: z.ZodObject<{
                    timestamp: z.ZodNumber;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    subplebbitAddress: z.ZodString;
                    protocolVersion: z.ZodString;
                    content: z.ZodOptional<z.ZodString>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    link: z.ZodOptional<z.ZodString>;
                    title: z.ZodOptional<z.ZodString>;
                    linkWidth: z.ZodOptional<z.ZodNumber>;
                    linkHeight: z.ZodOptional<z.ZodNumber>;
                    linkHtmlTagName: z.ZodOptional<z.ZodString>;
                    parentCid: z.ZodOptional<z.ZodString>;
                    postCid: z.ZodOptional<z.ZodString>;
                    author: z.ZodObject<{
                        address: z.ZodString;
                        previousCommentCid: z.ZodOptional<z.ZodString>;
                        displayName: z.ZodOptional<z.ZodString>;
                        wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                            address: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$strip>>>;
                        avatar: z.ZodOptional<z.ZodObject<{
                            chainTicker: z.ZodString;
                            address: z.ZodString;
                            id: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$loose>>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                    }, z.core.$loose>;
                    depth: z.ZodNumber;
                    thumbnailUrl: z.ZodOptional<z.ZodString>;
                    thumbnailUrlWidth: z.ZodOptional<z.ZodNumber>;
                    thumbnailUrlHeight: z.ZodOptional<z.ZodNumber>;
                    previousCid: z.ZodOptional<z.ZodString>;
                }, z.core.$loose>;
                commentUpdate: z.ZodObject<{
                    cid: z.ZodString;
                    upvoteCount: z.ZodNumber;
                    downvoteCount: z.ZodNumber;
                    replyCount: z.ZodNumber;
                    childCount: z.ZodOptional<z.ZodNumber>;
                    edit: z.ZodOptional<z.ZodObject<{
                        timestamp: z.ZodNumber;
                        signature: z.ZodObject<{
                            type: z.ZodString;
                            signature: z.ZodString;
                            publicKey: z.ZodString;
                            signedPropertyNames: z.ZodArray<z.ZodString>;
                        }, z.core.$strip>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                        subplebbitAddress: z.ZodString;
                        protocolVersion: z.ZodString;
                        commentCid: z.ZodString;
                        content: z.ZodOptional<z.ZodString>;
                        deleted: z.ZodOptional<z.ZodBoolean>;
                        spoiler: z.ZodOptional<z.ZodBoolean>;
                        nsfw: z.ZodOptional<z.ZodBoolean>;
                        reason: z.ZodOptional<z.ZodString>;
                        author: z.ZodObject<{
                            address: z.ZodString;
                            previousCommentCid: z.ZodOptional<z.ZodString>;
                            displayName: z.ZodOptional<z.ZodString>;
                            wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                                address: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$strip>>>;
                            avatar: z.ZodOptional<z.ZodObject<{
                                chainTicker: z.ZodString;
                                address: z.ZodString;
                                id: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$loose>>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                        }, z.core.$loose>;
                    }, z.core.$loose>>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    pinned: z.ZodOptional<z.ZodBoolean>;
                    locked: z.ZodOptional<z.ZodBoolean>;
                    removed: z.ZodOptional<z.ZodBoolean>;
                    reason: z.ZodOptional<z.ZodString>;
                    approved: z.ZodOptional<z.ZodBoolean>;
                    updatedAt: z.ZodNumber;
                    author: z.ZodOptional<z.ZodObject<{
                        subplebbit: z.ZodOptional<z.ZodObject<{
                            postScore: z.ZodNumber;
                            replyScore: z.ZodNumber;
                            banExpiresAt: z.ZodOptional<z.ZodNumber>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                            firstCommentTimestamp: z.ZodNumber;
                            lastCommentCid: z.ZodString;
                        }, z.core.$loose>>;
                    }, z.core.$loose>>;
                    lastChildCid: z.ZodOptional<z.ZodString>;
                    lastReplyTimestamp: z.ZodOptional<z.ZodNumber>;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    protocolVersion: z.ZodString;
                    replies: z.ZodOptional<z.ZodObject<{
                        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodObject</*elided*/ any, z.core.$strip>>;
                        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodString>>;
                    }, z.core.$strip>>;
                }, z.core.$loose>;
            }, z.core.$strip>>>;
            nextCid: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>;
        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodString>>;
    }, z.core.$strip>>, z.ZodObject<{
        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodString>>;
    }, z.core.$strip>]>;
    updateCid: z.ZodOptional<z.ZodString>;
}, z.core.$strict>;
export declare const SubplebbitSettingsSchema: z.ZodObject<{
    fetchThumbnailUrls: z.ZodOptional<z.ZodBoolean>;
    fetchThumbnailUrlsProxyUrl: z.ZodOptional<z.ZodString>;
    challenges: z.ZodOptional<z.ZodArray<z.ZodObject<{
        path: z.ZodOptional<z.ZodString>;
        name: z.ZodOptional<z.ZodString>;
        options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
            subplebbit: z.ZodOptional<z.ZodObject<{
                addresses: z.ZodArray<z.ZodString>;
                maxCommentCids: z.ZodNumber;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strict>>;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
            role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                owner: "owner";
                admin: "admin";
                moderator: "moderator";
            }>, z.ZodString]>>>;
            address: z.ZodOptional<z.ZodArray<z.ZodString>>;
            rateLimit: z.ZodOptional<z.ZodNumber>;
            rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
            publicationType: z.ZodOptional<z.ZodObject<{
                post: z.ZodOptional<z.ZodBoolean>;
                reply: z.ZodOptional<z.ZodBoolean>;
                vote: z.ZodOptional<z.ZodBoolean>;
                commentEdit: z.ZodOptional<z.ZodBoolean>;
                commentModeration: z.ZodOptional<z.ZodBoolean>;
                subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$loose>>;
        }, z.core.$loose>>>;
        description: z.ZodOptional<z.ZodString>;
        pendingApproval: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$strict>>>;
    maxPendingApprovalCount: z.ZodOptional<z.ZodNumber>;
    purgeDisapprovedCommentsOlderThan: z.ZodOptional<z.ZodNumber>;
}, z.core.$strict>;
export declare const SubplebbitEditOptionsSchema: z.ZodObject<{
    address: z.ZodOptional<z.ZodString>;
    title: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    pubsubTopic: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    rules: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString>>>;
    features: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    suggested: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>>;
    flairs: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>>;
    settings: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        fetchThumbnailUrls: z.ZodOptional<z.ZodBoolean>;
        fetchThumbnailUrlsProxyUrl: z.ZodOptional<z.ZodString>;
        challenges: z.ZodOptional<z.ZodArray<z.ZodObject<{
            path: z.ZodOptional<z.ZodString>;
            name: z.ZodOptional<z.ZodString>;
            options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
                subplebbit: z.ZodOptional<z.ZodObject<{
                    addresses: z.ZodArray<z.ZodString>;
                    maxCommentCids: z.ZodNumber;
                    postScore: z.ZodOptional<z.ZodNumber>;
                    replyScore: z.ZodOptional<z.ZodNumber>;
                    firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
                }, z.core.$strict>>;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
                challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
                role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                    owner: "owner";
                    admin: "admin";
                    moderator: "moderator";
                }>, z.ZodString]>>>;
                address: z.ZodOptional<z.ZodArray<z.ZodString>>;
                rateLimit: z.ZodOptional<z.ZodNumber>;
                rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
                publicationType: z.ZodOptional<z.ZodObject<{
                    post: z.ZodOptional<z.ZodBoolean>;
                    reply: z.ZodOptional<z.ZodBoolean>;
                    vote: z.ZodOptional<z.ZodBoolean>;
                    commentEdit: z.ZodOptional<z.ZodBoolean>;
                    commentModeration: z.ZodOptional<z.ZodBoolean>;
                    subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$loose>>;
            }, z.core.$loose>>>;
            description: z.ZodOptional<z.ZodString>;
            pendingApproval: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$strict>>>;
        maxPendingApprovalCount: z.ZodOptional<z.ZodNumber>;
        purgeDisapprovedCommentsOlderThan: z.ZodOptional<z.ZodNumber>;
    }, z.core.$strict>>>;
    roles: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>, z.ZodUndefined]>>>>;
}, z.core.$strict>;
export declare const CreateNewLocalSubplebbitUserOptionsSchema: z.ZodObject<{
    title: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    pubsubTopic: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    rules: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString>>>;
    features: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    suggested: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>>;
    flairs: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>>;
    settings: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        fetchThumbnailUrls: z.ZodOptional<z.ZodBoolean>;
        fetchThumbnailUrlsProxyUrl: z.ZodOptional<z.ZodString>;
        challenges: z.ZodOptional<z.ZodArray<z.ZodObject<{
            path: z.ZodOptional<z.ZodString>;
            name: z.ZodOptional<z.ZodString>;
            options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
                subplebbit: z.ZodOptional<z.ZodObject<{
                    addresses: z.ZodArray<z.ZodString>;
                    maxCommentCids: z.ZodNumber;
                    postScore: z.ZodOptional<z.ZodNumber>;
                    replyScore: z.ZodOptional<z.ZodNumber>;
                    firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
                }, z.core.$strict>>;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
                challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
                role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                    owner: "owner";
                    admin: "admin";
                    moderator: "moderator";
                }>, z.ZodString]>>>;
                address: z.ZodOptional<z.ZodArray<z.ZodString>>;
                rateLimit: z.ZodOptional<z.ZodNumber>;
                rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
                publicationType: z.ZodOptional<z.ZodObject<{
                    post: z.ZodOptional<z.ZodBoolean>;
                    reply: z.ZodOptional<z.ZodBoolean>;
                    vote: z.ZodOptional<z.ZodBoolean>;
                    commentEdit: z.ZodOptional<z.ZodBoolean>;
                    commentModeration: z.ZodOptional<z.ZodBoolean>;
                    subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$loose>>;
            }, z.core.$loose>>>;
            description: z.ZodOptional<z.ZodString>;
            pendingApproval: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$strict>>>;
        maxPendingApprovalCount: z.ZodOptional<z.ZodNumber>;
        purgeDisapprovedCommentsOlderThan: z.ZodOptional<z.ZodNumber>;
    }, z.core.$strict>>>;
    signer: z.ZodOptional<z.ZodObject<{
        type: z.ZodEnum<{
            ed25519: "ed25519";
        }>;
        privateKey: z.ZodString;
    }, z.core.$strip>>;
    roles: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>>>;
}, z.core.$strict>;
export declare const CreateNewLocalSubplebbitParsedOptionsSchema: z.ZodObject<{
    title: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    pubsubTopic: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    rules: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString>>>;
    features: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    suggested: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>>;
    flairs: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>>;
    settings: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        fetchThumbnailUrls: z.ZodOptional<z.ZodBoolean>;
        fetchThumbnailUrlsProxyUrl: z.ZodOptional<z.ZodString>;
        challenges: z.ZodOptional<z.ZodArray<z.ZodObject<{
            path: z.ZodOptional<z.ZodString>;
            name: z.ZodOptional<z.ZodString>;
            options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
                subplebbit: z.ZodOptional<z.ZodObject<{
                    addresses: z.ZodArray<z.ZodString>;
                    maxCommentCids: z.ZodNumber;
                    postScore: z.ZodOptional<z.ZodNumber>;
                    replyScore: z.ZodOptional<z.ZodNumber>;
                    firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
                }, z.core.$strict>>;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
                challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
                role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                    owner: "owner";
                    admin: "admin";
                    moderator: "moderator";
                }>, z.ZodString]>>>;
                address: z.ZodOptional<z.ZodArray<z.ZodString>>;
                rateLimit: z.ZodOptional<z.ZodNumber>;
                rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
                publicationType: z.ZodOptional<z.ZodObject<{
                    post: z.ZodOptional<z.ZodBoolean>;
                    reply: z.ZodOptional<z.ZodBoolean>;
                    vote: z.ZodOptional<z.ZodBoolean>;
                    commentEdit: z.ZodOptional<z.ZodBoolean>;
                    commentModeration: z.ZodOptional<z.ZodBoolean>;
                    subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$loose>>;
            }, z.core.$loose>>>;
            description: z.ZodOptional<z.ZodString>;
            pendingApproval: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$strict>>>;
        maxPendingApprovalCount: z.ZodOptional<z.ZodNumber>;
        purgeDisapprovedCommentsOlderThan: z.ZodOptional<z.ZodNumber>;
    }, z.core.$strict>>>;
    roles: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>>>;
    address: z.ZodString;
    signer: z.ZodObject<{
        type: z.ZodEnum<{
            ed25519: "ed25519";
        }>;
        privateKey: z.ZodString;
        address: z.ZodString;
        publicKey: z.ZodString;
    }, z.core.$strip>;
}, z.core.$strict>;
export declare const CreateRemoteSubplebbitFunctionArgumentSchema: z.ZodUnion<[z.ZodObject<{
    modQueue: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        pageCids: z.ZodRecord<z.ZodString, z.ZodString>;
    }, z.core.$strip>>>;
    challenges: z.ZodOptional<z.ZodArray<z.ZodObject<{
        exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
            subplebbit: z.ZodOptional<z.ZodObject<{
                addresses: z.ZodArray<z.ZodString>;
                maxCommentCids: z.ZodNumber;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strict>>;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
            role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                owner: "owner";
                admin: "admin";
                moderator: "moderator";
            }>, z.ZodString]>>>;
            address: z.ZodOptional<z.ZodArray<z.ZodString>>;
            rateLimit: z.ZodOptional<z.ZodNumber>;
            rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
            publicationType: z.ZodOptional<z.ZodObject<{
                post: z.ZodOptional<z.ZodBoolean>;
                reply: z.ZodOptional<z.ZodBoolean>;
                vote: z.ZodOptional<z.ZodBoolean>;
                commentEdit: z.ZodOptional<z.ZodBoolean>;
                commentModeration: z.ZodOptional<z.ZodBoolean>;
                subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$loose>>;
        }, z.core.$loose>>>;
        description: z.ZodOptional<z.ZodString>;
        challenge: z.ZodOptional<z.ZodString>;
        type: z.ZodString;
        caseInsensitive: z.ZodOptional<z.ZodBoolean>;
        pendingApproval: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    signature: z.ZodOptional<z.ZodObject<{
        type: z.ZodString;
        signature: z.ZodString;
        publicKey: z.ZodString;
        signedPropertyNames: z.ZodArray<z.ZodString>;
    }, z.core.$strip>>;
    encryption: z.ZodOptional<z.ZodObject<{
        type: z.ZodString;
        publicKey: z.ZodString;
    }, z.core.$loose>>;
    createdAt: z.ZodOptional<z.ZodNumber>;
    updatedAt: z.ZodOptional<z.ZodNumber>;
    pubsubTopic: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    statsCid: z.ZodOptional<z.ZodString>;
    protocolVersion: z.ZodOptional<z.ZodString>;
    postUpdates: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>>;
    title: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    roles: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>>>>;
    rules: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString>>>;
    lastPostCid: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    lastCommentCid: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    features: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    suggested: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>>;
    flairs: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>>;
    address: z.ZodString;
    posts: z.ZodUnion<[z.ZodOptional<z.ZodObject<{
        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodObject<{
            comments: z.ZodLazy<z.ZodArray<z.ZodObject<{
                comment: z.ZodObject<{
                    timestamp: z.ZodNumber;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    subplebbitAddress: z.ZodString;
                    protocolVersion: z.ZodString;
                    content: z.ZodOptional<z.ZodString>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    link: z.ZodOptional<z.ZodString>;
                    title: z.ZodOptional<z.ZodString>;
                    linkWidth: z.ZodOptional<z.ZodNumber>;
                    linkHeight: z.ZodOptional<z.ZodNumber>;
                    linkHtmlTagName: z.ZodOptional<z.ZodString>;
                    parentCid: z.ZodOptional<z.ZodString>;
                    postCid: z.ZodOptional<z.ZodString>;
                    author: z.ZodObject<{
                        address: z.ZodString;
                        previousCommentCid: z.ZodOptional<z.ZodString>;
                        displayName: z.ZodOptional<z.ZodString>;
                        wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                            address: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$strip>>>;
                        avatar: z.ZodOptional<z.ZodObject<{
                            chainTicker: z.ZodString;
                            address: z.ZodString;
                            id: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$loose>>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                    }, z.core.$loose>;
                    depth: z.ZodNumber;
                    thumbnailUrl: z.ZodOptional<z.ZodString>;
                    thumbnailUrlWidth: z.ZodOptional<z.ZodNumber>;
                    thumbnailUrlHeight: z.ZodOptional<z.ZodNumber>;
                    previousCid: z.ZodOptional<z.ZodString>;
                }, z.core.$loose>;
                commentUpdate: z.ZodObject<{
                    cid: z.ZodString;
                    upvoteCount: z.ZodNumber;
                    downvoteCount: z.ZodNumber;
                    replyCount: z.ZodNumber;
                    childCount: z.ZodOptional<z.ZodNumber>;
                    edit: z.ZodOptional<z.ZodObject<{
                        timestamp: z.ZodNumber;
                        signature: z.ZodObject<{
                            type: z.ZodString;
                            signature: z.ZodString;
                            publicKey: z.ZodString;
                            signedPropertyNames: z.ZodArray<z.ZodString>;
                        }, z.core.$strip>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                        subplebbitAddress: z.ZodString;
                        protocolVersion: z.ZodString;
                        commentCid: z.ZodString;
                        content: z.ZodOptional<z.ZodString>;
                        deleted: z.ZodOptional<z.ZodBoolean>;
                        spoiler: z.ZodOptional<z.ZodBoolean>;
                        nsfw: z.ZodOptional<z.ZodBoolean>;
                        reason: z.ZodOptional<z.ZodString>;
                        author: z.ZodObject<{
                            address: z.ZodString;
                            previousCommentCid: z.ZodOptional<z.ZodString>;
                            displayName: z.ZodOptional<z.ZodString>;
                            wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                                address: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$strip>>>;
                            avatar: z.ZodOptional<z.ZodObject<{
                                chainTicker: z.ZodString;
                                address: z.ZodString;
                                id: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$loose>>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                        }, z.core.$loose>;
                    }, z.core.$loose>>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    pinned: z.ZodOptional<z.ZodBoolean>;
                    locked: z.ZodOptional<z.ZodBoolean>;
                    removed: z.ZodOptional<z.ZodBoolean>;
                    reason: z.ZodOptional<z.ZodString>;
                    approved: z.ZodOptional<z.ZodBoolean>;
                    updatedAt: z.ZodNumber;
                    author: z.ZodOptional<z.ZodObject<{
                        subplebbit: z.ZodOptional<z.ZodObject<{
                            postScore: z.ZodNumber;
                            replyScore: z.ZodNumber;
                            banExpiresAt: z.ZodOptional<z.ZodNumber>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                            firstCommentTimestamp: z.ZodNumber;
                            lastCommentCid: z.ZodString;
                        }, z.core.$loose>>;
                    }, z.core.$loose>>;
                    lastChildCid: z.ZodOptional<z.ZodString>;
                    lastReplyTimestamp: z.ZodOptional<z.ZodNumber>;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    protocolVersion: z.ZodString;
                    replies: z.ZodOptional<z.ZodObject<{
                        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodObject</*elided*/ any, z.core.$strip>>;
                        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodString>>;
                    }, z.core.$strip>>;
                }, z.core.$loose>;
            }, z.core.$strip>>>;
            nextCid: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>;
        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodString>>;
    }, z.core.$strip>>, z.ZodObject<{
        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodString>>;
    }, z.core.$strip>]>;
    updateCid: z.ZodOptional<z.ZodString>;
}, z.core.$strict>, z.ZodObject<{
    posts: z.ZodOptional<z.ZodObject<{
        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodObject<{
            comments: z.ZodLazy<z.ZodArray<z.ZodObject<{
                comment: z.ZodObject<{
                    timestamp: z.ZodNumber;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    subplebbitAddress: z.ZodString;
                    protocolVersion: z.ZodString;
                    content: z.ZodOptional<z.ZodString>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    link: z.ZodOptional<z.ZodString>;
                    title: z.ZodOptional<z.ZodString>;
                    linkWidth: z.ZodOptional<z.ZodNumber>;
                    linkHeight: z.ZodOptional<z.ZodNumber>;
                    linkHtmlTagName: z.ZodOptional<z.ZodString>;
                    parentCid: z.ZodOptional<z.ZodString>;
                    postCid: z.ZodOptional<z.ZodString>;
                    author: z.ZodObject<{
                        address: z.ZodString;
                        previousCommentCid: z.ZodOptional<z.ZodString>;
                        displayName: z.ZodOptional<z.ZodString>;
                        wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                            address: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$strip>>>;
                        avatar: z.ZodOptional<z.ZodObject<{
                            chainTicker: z.ZodString;
                            address: z.ZodString;
                            id: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$loose>>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                    }, z.core.$loose>;
                    depth: z.ZodNumber;
                    thumbnailUrl: z.ZodOptional<z.ZodString>;
                    thumbnailUrlWidth: z.ZodOptional<z.ZodNumber>;
                    thumbnailUrlHeight: z.ZodOptional<z.ZodNumber>;
                    previousCid: z.ZodOptional<z.ZodString>;
                }, z.core.$loose>;
                commentUpdate: z.ZodObject<{
                    cid: z.ZodString;
                    upvoteCount: z.ZodNumber;
                    downvoteCount: z.ZodNumber;
                    replyCount: z.ZodNumber;
                    childCount: z.ZodOptional<z.ZodNumber>;
                    edit: z.ZodOptional<z.ZodObject<{
                        timestamp: z.ZodNumber;
                        signature: z.ZodObject<{
                            type: z.ZodString;
                            signature: z.ZodString;
                            publicKey: z.ZodString;
                            signedPropertyNames: z.ZodArray<z.ZodString>;
                        }, z.core.$strip>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                        subplebbitAddress: z.ZodString;
                        protocolVersion: z.ZodString;
                        commentCid: z.ZodString;
                        content: z.ZodOptional<z.ZodString>;
                        deleted: z.ZodOptional<z.ZodBoolean>;
                        spoiler: z.ZodOptional<z.ZodBoolean>;
                        nsfw: z.ZodOptional<z.ZodBoolean>;
                        reason: z.ZodOptional<z.ZodString>;
                        author: z.ZodObject<{
                            address: z.ZodString;
                            previousCommentCid: z.ZodOptional<z.ZodString>;
                            displayName: z.ZodOptional<z.ZodString>;
                            wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                                address: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$strip>>>;
                            avatar: z.ZodOptional<z.ZodObject<{
                                chainTicker: z.ZodString;
                                address: z.ZodString;
                                id: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$loose>>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                        }, z.core.$loose>;
                    }, z.core.$loose>>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    pinned: z.ZodOptional<z.ZodBoolean>;
                    locked: z.ZodOptional<z.ZodBoolean>;
                    removed: z.ZodOptional<z.ZodBoolean>;
                    reason: z.ZodOptional<z.ZodString>;
                    approved: z.ZodOptional<z.ZodBoolean>;
                    updatedAt: z.ZodNumber;
                    author: z.ZodOptional<z.ZodObject<{
                        subplebbit: z.ZodOptional<z.ZodObject<{
                            postScore: z.ZodNumber;
                            replyScore: z.ZodNumber;
                            banExpiresAt: z.ZodOptional<z.ZodNumber>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                            firstCommentTimestamp: z.ZodNumber;
                            lastCommentCid: z.ZodString;
                        }, z.core.$loose>>;
                    }, z.core.$loose>>;
                    lastChildCid: z.ZodOptional<z.ZodString>;
                    lastReplyTimestamp: z.ZodOptional<z.ZodNumber>;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    protocolVersion: z.ZodString;
                    replies: z.ZodOptional<z.ZodObject<{
                        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodObject</*elided*/ any, z.core.$strip>>;
                        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodString>>;
                    }, z.core.$strip>>;
                }, z.core.$loose>;
            }, z.core.$strip>>>;
            nextCid: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>;
        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodString>>;
    }, z.core.$strip>>;
    modQueue: z.ZodOptional<z.ZodObject<{
        pageCids: z.ZodRecord<z.ZodString, z.ZodString>;
    }, z.core.$strip>>;
    challenges: z.ZodArray<z.ZodObject<{
        exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
            subplebbit: z.ZodOptional<z.ZodObject<{
                addresses: z.ZodArray<z.ZodString>;
                maxCommentCids: z.ZodNumber;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strict>>;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
            role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                owner: "owner";
                admin: "admin";
                moderator: "moderator";
            }>, z.ZodString]>>>;
            address: z.ZodOptional<z.ZodArray<z.ZodString>>;
            rateLimit: z.ZodOptional<z.ZodNumber>;
            rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
            publicationType: z.ZodOptional<z.ZodObject<{
                post: z.ZodOptional<z.ZodBoolean>;
                reply: z.ZodOptional<z.ZodBoolean>;
                vote: z.ZodOptional<z.ZodBoolean>;
                commentEdit: z.ZodOptional<z.ZodBoolean>;
                commentModeration: z.ZodOptional<z.ZodBoolean>;
                subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$loose>>;
        }, z.core.$loose>>>;
        description: z.ZodOptional<z.ZodString>;
        challenge: z.ZodOptional<z.ZodString>;
        type: z.ZodString;
        caseInsensitive: z.ZodOptional<z.ZodBoolean>;
        pendingApproval: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
    signature: z.ZodObject<{
        type: z.ZodString;
        signature: z.ZodString;
        publicKey: z.ZodString;
        signedPropertyNames: z.ZodArray<z.ZodString>;
    }, z.core.$strip>;
    encryption: z.ZodObject<{
        type: z.ZodString;
        publicKey: z.ZodString;
    }, z.core.$loose>;
    address: z.ZodString;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
    pubsubTopic: z.ZodOptional<z.ZodString>;
    statsCid: z.ZodString;
    protocolVersion: z.ZodString;
    postUpdates: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    roles: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>>>;
    rules: z.ZodOptional<z.ZodArray<z.ZodString>>;
    lastPostCid: z.ZodOptional<z.ZodString>;
    lastCommentCid: z.ZodOptional<z.ZodString>;
    features: z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
    suggested: z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>;
    flairs: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>;
}, z.core.$loose>]>;
export declare const CreateRpcSubplebbitFunctionArgumentSchema: z.ZodUnion<[z.ZodUnion<[z.ZodObject<{
    modQueue: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        pageCids: z.ZodRecord<z.ZodString, z.ZodString>;
    }, z.core.$strip>>>;
    challenges: z.ZodOptional<z.ZodArray<z.ZodObject<{
        exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
            subplebbit: z.ZodOptional<z.ZodObject<{
                addresses: z.ZodArray<z.ZodString>;
                maxCommentCids: z.ZodNumber;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strict>>;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
            role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                owner: "owner";
                admin: "admin";
                moderator: "moderator";
            }>, z.ZodString]>>>;
            address: z.ZodOptional<z.ZodArray<z.ZodString>>;
            rateLimit: z.ZodOptional<z.ZodNumber>;
            rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
            publicationType: z.ZodOptional<z.ZodObject<{
                post: z.ZodOptional<z.ZodBoolean>;
                reply: z.ZodOptional<z.ZodBoolean>;
                vote: z.ZodOptional<z.ZodBoolean>;
                commentEdit: z.ZodOptional<z.ZodBoolean>;
                commentModeration: z.ZodOptional<z.ZodBoolean>;
                subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$loose>>;
        }, z.core.$loose>>>;
        description: z.ZodOptional<z.ZodString>;
        challenge: z.ZodOptional<z.ZodString>;
        type: z.ZodString;
        caseInsensitive: z.ZodOptional<z.ZodBoolean>;
        pendingApproval: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    signature: z.ZodOptional<z.ZodObject<{
        type: z.ZodString;
        signature: z.ZodString;
        publicKey: z.ZodString;
        signedPropertyNames: z.ZodArray<z.ZodString>;
    }, z.core.$strip>>;
    encryption: z.ZodOptional<z.ZodObject<{
        type: z.ZodString;
        publicKey: z.ZodString;
    }, z.core.$loose>>;
    createdAt: z.ZodOptional<z.ZodNumber>;
    updatedAt: z.ZodOptional<z.ZodNumber>;
    pubsubTopic: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    statsCid: z.ZodOptional<z.ZodString>;
    protocolVersion: z.ZodOptional<z.ZodString>;
    postUpdates: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>>;
    title: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    roles: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>>>>;
    rules: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString>>>;
    lastPostCid: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    lastCommentCid: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    features: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    suggested: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>>;
    flairs: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>>;
    address: z.ZodString;
    posts: z.ZodUnion<[z.ZodOptional<z.ZodObject<{
        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodObject<{
            comments: z.ZodLazy<z.ZodArray<z.ZodObject<{
                comment: z.ZodObject<{
                    timestamp: z.ZodNumber;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    subplebbitAddress: z.ZodString;
                    protocolVersion: z.ZodString;
                    content: z.ZodOptional<z.ZodString>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    link: z.ZodOptional<z.ZodString>;
                    title: z.ZodOptional<z.ZodString>;
                    linkWidth: z.ZodOptional<z.ZodNumber>;
                    linkHeight: z.ZodOptional<z.ZodNumber>;
                    linkHtmlTagName: z.ZodOptional<z.ZodString>;
                    parentCid: z.ZodOptional<z.ZodString>;
                    postCid: z.ZodOptional<z.ZodString>;
                    author: z.ZodObject<{
                        address: z.ZodString;
                        previousCommentCid: z.ZodOptional<z.ZodString>;
                        displayName: z.ZodOptional<z.ZodString>;
                        wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                            address: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$strip>>>;
                        avatar: z.ZodOptional<z.ZodObject<{
                            chainTicker: z.ZodString;
                            address: z.ZodString;
                            id: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$loose>>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                    }, z.core.$loose>;
                    depth: z.ZodNumber;
                    thumbnailUrl: z.ZodOptional<z.ZodString>;
                    thumbnailUrlWidth: z.ZodOptional<z.ZodNumber>;
                    thumbnailUrlHeight: z.ZodOptional<z.ZodNumber>;
                    previousCid: z.ZodOptional<z.ZodString>;
                }, z.core.$loose>;
                commentUpdate: z.ZodObject<{
                    cid: z.ZodString;
                    upvoteCount: z.ZodNumber;
                    downvoteCount: z.ZodNumber;
                    replyCount: z.ZodNumber;
                    childCount: z.ZodOptional<z.ZodNumber>;
                    edit: z.ZodOptional<z.ZodObject<{
                        timestamp: z.ZodNumber;
                        signature: z.ZodObject<{
                            type: z.ZodString;
                            signature: z.ZodString;
                            publicKey: z.ZodString;
                            signedPropertyNames: z.ZodArray<z.ZodString>;
                        }, z.core.$strip>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                        subplebbitAddress: z.ZodString;
                        protocolVersion: z.ZodString;
                        commentCid: z.ZodString;
                        content: z.ZodOptional<z.ZodString>;
                        deleted: z.ZodOptional<z.ZodBoolean>;
                        spoiler: z.ZodOptional<z.ZodBoolean>;
                        nsfw: z.ZodOptional<z.ZodBoolean>;
                        reason: z.ZodOptional<z.ZodString>;
                        author: z.ZodObject<{
                            address: z.ZodString;
                            previousCommentCid: z.ZodOptional<z.ZodString>;
                            displayName: z.ZodOptional<z.ZodString>;
                            wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                                address: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$strip>>>;
                            avatar: z.ZodOptional<z.ZodObject<{
                                chainTicker: z.ZodString;
                                address: z.ZodString;
                                id: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$loose>>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                        }, z.core.$loose>;
                    }, z.core.$loose>>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    pinned: z.ZodOptional<z.ZodBoolean>;
                    locked: z.ZodOptional<z.ZodBoolean>;
                    removed: z.ZodOptional<z.ZodBoolean>;
                    reason: z.ZodOptional<z.ZodString>;
                    approved: z.ZodOptional<z.ZodBoolean>;
                    updatedAt: z.ZodNumber;
                    author: z.ZodOptional<z.ZodObject<{
                        subplebbit: z.ZodOptional<z.ZodObject<{
                            postScore: z.ZodNumber;
                            replyScore: z.ZodNumber;
                            banExpiresAt: z.ZodOptional<z.ZodNumber>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                            firstCommentTimestamp: z.ZodNumber;
                            lastCommentCid: z.ZodString;
                        }, z.core.$loose>>;
                    }, z.core.$loose>>;
                    lastChildCid: z.ZodOptional<z.ZodString>;
                    lastReplyTimestamp: z.ZodOptional<z.ZodNumber>;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    protocolVersion: z.ZodString;
                    replies: z.ZodOptional<z.ZodObject<{
                        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodObject</*elided*/ any, z.core.$strip>>;
                        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodString>>;
                    }, z.core.$strip>>;
                }, z.core.$loose>;
            }, z.core.$strip>>>;
            nextCid: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>;
        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodString>>;
    }, z.core.$strip>>, z.ZodObject<{
        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodString>>;
    }, z.core.$strip>]>;
    updateCid: z.ZodOptional<z.ZodString>;
}, z.core.$strict>, z.ZodObject<{
    posts: z.ZodOptional<z.ZodObject<{
        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodObject<{
            comments: z.ZodLazy<z.ZodArray<z.ZodObject<{
                comment: z.ZodObject<{
                    timestamp: z.ZodNumber;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    subplebbitAddress: z.ZodString;
                    protocolVersion: z.ZodString;
                    content: z.ZodOptional<z.ZodString>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    link: z.ZodOptional<z.ZodString>;
                    title: z.ZodOptional<z.ZodString>;
                    linkWidth: z.ZodOptional<z.ZodNumber>;
                    linkHeight: z.ZodOptional<z.ZodNumber>;
                    linkHtmlTagName: z.ZodOptional<z.ZodString>;
                    parentCid: z.ZodOptional<z.ZodString>;
                    postCid: z.ZodOptional<z.ZodString>;
                    author: z.ZodObject<{
                        address: z.ZodString;
                        previousCommentCid: z.ZodOptional<z.ZodString>;
                        displayName: z.ZodOptional<z.ZodString>;
                        wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                            address: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$strip>>>;
                        avatar: z.ZodOptional<z.ZodObject<{
                            chainTicker: z.ZodString;
                            address: z.ZodString;
                            id: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$loose>>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                    }, z.core.$loose>;
                    depth: z.ZodNumber;
                    thumbnailUrl: z.ZodOptional<z.ZodString>;
                    thumbnailUrlWidth: z.ZodOptional<z.ZodNumber>;
                    thumbnailUrlHeight: z.ZodOptional<z.ZodNumber>;
                    previousCid: z.ZodOptional<z.ZodString>;
                }, z.core.$loose>;
                commentUpdate: z.ZodObject<{
                    cid: z.ZodString;
                    upvoteCount: z.ZodNumber;
                    downvoteCount: z.ZodNumber;
                    replyCount: z.ZodNumber;
                    childCount: z.ZodOptional<z.ZodNumber>;
                    edit: z.ZodOptional<z.ZodObject<{
                        timestamp: z.ZodNumber;
                        signature: z.ZodObject<{
                            type: z.ZodString;
                            signature: z.ZodString;
                            publicKey: z.ZodString;
                            signedPropertyNames: z.ZodArray<z.ZodString>;
                        }, z.core.$strip>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                        subplebbitAddress: z.ZodString;
                        protocolVersion: z.ZodString;
                        commentCid: z.ZodString;
                        content: z.ZodOptional<z.ZodString>;
                        deleted: z.ZodOptional<z.ZodBoolean>;
                        spoiler: z.ZodOptional<z.ZodBoolean>;
                        nsfw: z.ZodOptional<z.ZodBoolean>;
                        reason: z.ZodOptional<z.ZodString>;
                        author: z.ZodObject<{
                            address: z.ZodString;
                            previousCommentCid: z.ZodOptional<z.ZodString>;
                            displayName: z.ZodOptional<z.ZodString>;
                            wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                                address: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$strip>>>;
                            avatar: z.ZodOptional<z.ZodObject<{
                                chainTicker: z.ZodString;
                                address: z.ZodString;
                                id: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$loose>>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                        }, z.core.$loose>;
                    }, z.core.$loose>>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    pinned: z.ZodOptional<z.ZodBoolean>;
                    locked: z.ZodOptional<z.ZodBoolean>;
                    removed: z.ZodOptional<z.ZodBoolean>;
                    reason: z.ZodOptional<z.ZodString>;
                    approved: z.ZodOptional<z.ZodBoolean>;
                    updatedAt: z.ZodNumber;
                    author: z.ZodOptional<z.ZodObject<{
                        subplebbit: z.ZodOptional<z.ZodObject<{
                            postScore: z.ZodNumber;
                            replyScore: z.ZodNumber;
                            banExpiresAt: z.ZodOptional<z.ZodNumber>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                            firstCommentTimestamp: z.ZodNumber;
                            lastCommentCid: z.ZodString;
                        }, z.core.$loose>>;
                    }, z.core.$loose>>;
                    lastChildCid: z.ZodOptional<z.ZodString>;
                    lastReplyTimestamp: z.ZodOptional<z.ZodNumber>;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    protocolVersion: z.ZodString;
                    replies: z.ZodOptional<z.ZodObject<{
                        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodObject</*elided*/ any, z.core.$strip>>;
                        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodString>>;
                    }, z.core.$strip>>;
                }, z.core.$loose>;
            }, z.core.$strip>>>;
            nextCid: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>;
        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodString>>;
    }, z.core.$strip>>;
    modQueue: z.ZodOptional<z.ZodObject<{
        pageCids: z.ZodRecord<z.ZodString, z.ZodString>;
    }, z.core.$strip>>;
    challenges: z.ZodArray<z.ZodObject<{
        exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
            subplebbit: z.ZodOptional<z.ZodObject<{
                addresses: z.ZodArray<z.ZodString>;
                maxCommentCids: z.ZodNumber;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strict>>;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
            role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                owner: "owner";
                admin: "admin";
                moderator: "moderator";
            }>, z.ZodString]>>>;
            address: z.ZodOptional<z.ZodArray<z.ZodString>>;
            rateLimit: z.ZodOptional<z.ZodNumber>;
            rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
            publicationType: z.ZodOptional<z.ZodObject<{
                post: z.ZodOptional<z.ZodBoolean>;
                reply: z.ZodOptional<z.ZodBoolean>;
                vote: z.ZodOptional<z.ZodBoolean>;
                commentEdit: z.ZodOptional<z.ZodBoolean>;
                commentModeration: z.ZodOptional<z.ZodBoolean>;
                subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$loose>>;
        }, z.core.$loose>>>;
        description: z.ZodOptional<z.ZodString>;
        challenge: z.ZodOptional<z.ZodString>;
        type: z.ZodString;
        caseInsensitive: z.ZodOptional<z.ZodBoolean>;
        pendingApproval: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
    signature: z.ZodObject<{
        type: z.ZodString;
        signature: z.ZodString;
        publicKey: z.ZodString;
        signedPropertyNames: z.ZodArray<z.ZodString>;
    }, z.core.$strip>;
    encryption: z.ZodObject<{
        type: z.ZodString;
        publicKey: z.ZodString;
    }, z.core.$loose>;
    address: z.ZodString;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
    pubsubTopic: z.ZodOptional<z.ZodString>;
    statsCid: z.ZodString;
    protocolVersion: z.ZodString;
    postUpdates: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    roles: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>>>;
    rules: z.ZodOptional<z.ZodArray<z.ZodString>>;
    lastPostCid: z.ZodOptional<z.ZodString>;
    lastCommentCid: z.ZodOptional<z.ZodString>;
    features: z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
    suggested: z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>;
    flairs: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>;
}, z.core.$loose>]>, z.ZodObject<{
    title: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    pubsubTopic: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    rules: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString>>>;
    features: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    suggested: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>>;
    flairs: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>>;
    settings: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        fetchThumbnailUrls: z.ZodOptional<z.ZodBoolean>;
        fetchThumbnailUrlsProxyUrl: z.ZodOptional<z.ZodString>;
        challenges: z.ZodOptional<z.ZodArray<z.ZodObject<{
            path: z.ZodOptional<z.ZodString>;
            name: z.ZodOptional<z.ZodString>;
            options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
                subplebbit: z.ZodOptional<z.ZodObject<{
                    addresses: z.ZodArray<z.ZodString>;
                    maxCommentCids: z.ZodNumber;
                    postScore: z.ZodOptional<z.ZodNumber>;
                    replyScore: z.ZodOptional<z.ZodNumber>;
                    firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
                }, z.core.$strict>>;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
                challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
                role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                    owner: "owner";
                    admin: "admin";
                    moderator: "moderator";
                }>, z.ZodString]>>>;
                address: z.ZodOptional<z.ZodArray<z.ZodString>>;
                rateLimit: z.ZodOptional<z.ZodNumber>;
                rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
                publicationType: z.ZodOptional<z.ZodObject<{
                    post: z.ZodOptional<z.ZodBoolean>;
                    reply: z.ZodOptional<z.ZodBoolean>;
                    vote: z.ZodOptional<z.ZodBoolean>;
                    commentEdit: z.ZodOptional<z.ZodBoolean>;
                    commentModeration: z.ZodOptional<z.ZodBoolean>;
                    subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$loose>>;
            }, z.core.$loose>>>;
            description: z.ZodOptional<z.ZodString>;
            pendingApproval: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$strict>>>;
        maxPendingApprovalCount: z.ZodOptional<z.ZodNumber>;
        purgeDisapprovedCommentsOlderThan: z.ZodOptional<z.ZodNumber>;
    }, z.core.$strict>>>;
    signer: z.ZodOptional<z.ZodObject<{
        type: z.ZodEnum<{
            ed25519: "ed25519";
        }>;
        privateKey: z.ZodString;
    }, z.core.$strip>>;
    roles: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>>>;
}, z.core.$strict>]>;
export declare const CreateSubplebbitFunctionArgumentsSchema: z.ZodUnion<[z.ZodObject<{
    title: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    pubsubTopic: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    rules: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString>>>;
    features: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    suggested: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>>;
    flairs: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>>;
    settings: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        fetchThumbnailUrls: z.ZodOptional<z.ZodBoolean>;
        fetchThumbnailUrlsProxyUrl: z.ZodOptional<z.ZodString>;
        challenges: z.ZodOptional<z.ZodArray<z.ZodObject<{
            path: z.ZodOptional<z.ZodString>;
            name: z.ZodOptional<z.ZodString>;
            options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
            exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
                subplebbit: z.ZodOptional<z.ZodObject<{
                    addresses: z.ZodArray<z.ZodString>;
                    maxCommentCids: z.ZodNumber;
                    postScore: z.ZodOptional<z.ZodNumber>;
                    replyScore: z.ZodOptional<z.ZodNumber>;
                    firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
                }, z.core.$strict>>;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
                challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
                role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                    owner: "owner";
                    admin: "admin";
                    moderator: "moderator";
                }>, z.ZodString]>>>;
                address: z.ZodOptional<z.ZodArray<z.ZodString>>;
                rateLimit: z.ZodOptional<z.ZodNumber>;
                rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
                publicationType: z.ZodOptional<z.ZodObject<{
                    post: z.ZodOptional<z.ZodBoolean>;
                    reply: z.ZodOptional<z.ZodBoolean>;
                    vote: z.ZodOptional<z.ZodBoolean>;
                    commentEdit: z.ZodOptional<z.ZodBoolean>;
                    commentModeration: z.ZodOptional<z.ZodBoolean>;
                    subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$loose>>;
            }, z.core.$loose>>>;
            description: z.ZodOptional<z.ZodString>;
            pendingApproval: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$strict>>>;
        maxPendingApprovalCount: z.ZodOptional<z.ZodNumber>;
        purgeDisapprovedCommentsOlderThan: z.ZodOptional<z.ZodNumber>;
    }, z.core.$strict>>>;
    signer: z.ZodOptional<z.ZodObject<{
        type: z.ZodEnum<{
            ed25519: "ed25519";
        }>;
        privateKey: z.ZodString;
    }, z.core.$strip>>;
    roles: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>>>;
}, z.core.$strict>, z.ZodUnion<[z.ZodObject<{
    modQueue: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        pageCids: z.ZodRecord<z.ZodString, z.ZodString>;
    }, z.core.$strip>>>;
    challenges: z.ZodOptional<z.ZodArray<z.ZodObject<{
        exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
            subplebbit: z.ZodOptional<z.ZodObject<{
                addresses: z.ZodArray<z.ZodString>;
                maxCommentCids: z.ZodNumber;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strict>>;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
            role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                owner: "owner";
                admin: "admin";
                moderator: "moderator";
            }>, z.ZodString]>>>;
            address: z.ZodOptional<z.ZodArray<z.ZodString>>;
            rateLimit: z.ZodOptional<z.ZodNumber>;
            rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
            publicationType: z.ZodOptional<z.ZodObject<{
                post: z.ZodOptional<z.ZodBoolean>;
                reply: z.ZodOptional<z.ZodBoolean>;
                vote: z.ZodOptional<z.ZodBoolean>;
                commentEdit: z.ZodOptional<z.ZodBoolean>;
                commentModeration: z.ZodOptional<z.ZodBoolean>;
                subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$loose>>;
        }, z.core.$loose>>>;
        description: z.ZodOptional<z.ZodString>;
        challenge: z.ZodOptional<z.ZodString>;
        type: z.ZodString;
        caseInsensitive: z.ZodOptional<z.ZodBoolean>;
        pendingApproval: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    signature: z.ZodOptional<z.ZodObject<{
        type: z.ZodString;
        signature: z.ZodString;
        publicKey: z.ZodString;
        signedPropertyNames: z.ZodArray<z.ZodString>;
    }, z.core.$strip>>;
    encryption: z.ZodOptional<z.ZodObject<{
        type: z.ZodString;
        publicKey: z.ZodString;
    }, z.core.$loose>>;
    createdAt: z.ZodOptional<z.ZodNumber>;
    updatedAt: z.ZodOptional<z.ZodNumber>;
    pubsubTopic: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    statsCid: z.ZodOptional<z.ZodString>;
    protocolVersion: z.ZodOptional<z.ZodString>;
    postUpdates: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>>;
    title: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    roles: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>>>>;
    rules: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString>>>;
    lastPostCid: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    lastCommentCid: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    features: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>>;
    suggested: z.ZodOptional<z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>>;
    flairs: z.ZodOptional<z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>>;
    address: z.ZodString;
    posts: z.ZodUnion<[z.ZodOptional<z.ZodObject<{
        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodObject<{
            comments: z.ZodLazy<z.ZodArray<z.ZodObject<{
                comment: z.ZodObject<{
                    timestamp: z.ZodNumber;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    subplebbitAddress: z.ZodString;
                    protocolVersion: z.ZodString;
                    content: z.ZodOptional<z.ZodString>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    link: z.ZodOptional<z.ZodString>;
                    title: z.ZodOptional<z.ZodString>;
                    linkWidth: z.ZodOptional<z.ZodNumber>;
                    linkHeight: z.ZodOptional<z.ZodNumber>;
                    linkHtmlTagName: z.ZodOptional<z.ZodString>;
                    parentCid: z.ZodOptional<z.ZodString>;
                    postCid: z.ZodOptional<z.ZodString>;
                    author: z.ZodObject<{
                        address: z.ZodString;
                        previousCommentCid: z.ZodOptional<z.ZodString>;
                        displayName: z.ZodOptional<z.ZodString>;
                        wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                            address: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$strip>>>;
                        avatar: z.ZodOptional<z.ZodObject<{
                            chainTicker: z.ZodString;
                            address: z.ZodString;
                            id: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$loose>>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                    }, z.core.$loose>;
                    depth: z.ZodNumber;
                    thumbnailUrl: z.ZodOptional<z.ZodString>;
                    thumbnailUrlWidth: z.ZodOptional<z.ZodNumber>;
                    thumbnailUrlHeight: z.ZodOptional<z.ZodNumber>;
                    previousCid: z.ZodOptional<z.ZodString>;
                }, z.core.$loose>;
                commentUpdate: z.ZodObject<{
                    cid: z.ZodString;
                    upvoteCount: z.ZodNumber;
                    downvoteCount: z.ZodNumber;
                    replyCount: z.ZodNumber;
                    childCount: z.ZodOptional<z.ZodNumber>;
                    edit: z.ZodOptional<z.ZodObject<{
                        timestamp: z.ZodNumber;
                        signature: z.ZodObject<{
                            type: z.ZodString;
                            signature: z.ZodString;
                            publicKey: z.ZodString;
                            signedPropertyNames: z.ZodArray<z.ZodString>;
                        }, z.core.$strip>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                        subplebbitAddress: z.ZodString;
                        protocolVersion: z.ZodString;
                        commentCid: z.ZodString;
                        content: z.ZodOptional<z.ZodString>;
                        deleted: z.ZodOptional<z.ZodBoolean>;
                        spoiler: z.ZodOptional<z.ZodBoolean>;
                        nsfw: z.ZodOptional<z.ZodBoolean>;
                        reason: z.ZodOptional<z.ZodString>;
                        author: z.ZodObject<{
                            address: z.ZodString;
                            previousCommentCid: z.ZodOptional<z.ZodString>;
                            displayName: z.ZodOptional<z.ZodString>;
                            wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                                address: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$strip>>>;
                            avatar: z.ZodOptional<z.ZodObject<{
                                chainTicker: z.ZodString;
                                address: z.ZodString;
                                id: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$loose>>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                        }, z.core.$loose>;
                    }, z.core.$loose>>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    pinned: z.ZodOptional<z.ZodBoolean>;
                    locked: z.ZodOptional<z.ZodBoolean>;
                    removed: z.ZodOptional<z.ZodBoolean>;
                    reason: z.ZodOptional<z.ZodString>;
                    approved: z.ZodOptional<z.ZodBoolean>;
                    updatedAt: z.ZodNumber;
                    author: z.ZodOptional<z.ZodObject<{
                        subplebbit: z.ZodOptional<z.ZodObject<{
                            postScore: z.ZodNumber;
                            replyScore: z.ZodNumber;
                            banExpiresAt: z.ZodOptional<z.ZodNumber>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                            firstCommentTimestamp: z.ZodNumber;
                            lastCommentCid: z.ZodString;
                        }, z.core.$loose>>;
                    }, z.core.$loose>>;
                    lastChildCid: z.ZodOptional<z.ZodString>;
                    lastReplyTimestamp: z.ZodOptional<z.ZodNumber>;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    protocolVersion: z.ZodString;
                    replies: z.ZodOptional<z.ZodObject<{
                        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodObject</*elided*/ any, z.core.$strip>>;
                        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodString>>;
                    }, z.core.$strip>>;
                }, z.core.$loose>;
            }, z.core.$strip>>>;
            nextCid: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>;
        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodString>>;
    }, z.core.$strip>>, z.ZodObject<{
        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodString>>;
    }, z.core.$strip>]>;
    updateCid: z.ZodOptional<z.ZodString>;
}, z.core.$strict>, z.ZodObject<{
    posts: z.ZodOptional<z.ZodObject<{
        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodObject<{
            comments: z.ZodLazy<z.ZodArray<z.ZodObject<{
                comment: z.ZodObject<{
                    timestamp: z.ZodNumber;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    subplebbitAddress: z.ZodString;
                    protocolVersion: z.ZodString;
                    content: z.ZodOptional<z.ZodString>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    link: z.ZodOptional<z.ZodString>;
                    title: z.ZodOptional<z.ZodString>;
                    linkWidth: z.ZodOptional<z.ZodNumber>;
                    linkHeight: z.ZodOptional<z.ZodNumber>;
                    linkHtmlTagName: z.ZodOptional<z.ZodString>;
                    parentCid: z.ZodOptional<z.ZodString>;
                    postCid: z.ZodOptional<z.ZodString>;
                    author: z.ZodObject<{
                        address: z.ZodString;
                        previousCommentCid: z.ZodOptional<z.ZodString>;
                        displayName: z.ZodOptional<z.ZodString>;
                        wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                            address: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$strip>>>;
                        avatar: z.ZodOptional<z.ZodObject<{
                            chainTicker: z.ZodString;
                            address: z.ZodString;
                            id: z.ZodString;
                            timestamp: z.ZodNumber;
                            signature: z.ZodObject<{
                                signature: z.ZodString;
                                type: z.ZodString;
                            }, z.core.$strip>;
                        }, z.core.$loose>>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                    }, z.core.$loose>;
                    depth: z.ZodNumber;
                    thumbnailUrl: z.ZodOptional<z.ZodString>;
                    thumbnailUrlWidth: z.ZodOptional<z.ZodNumber>;
                    thumbnailUrlHeight: z.ZodOptional<z.ZodNumber>;
                    previousCid: z.ZodOptional<z.ZodString>;
                }, z.core.$loose>;
                commentUpdate: z.ZodObject<{
                    cid: z.ZodString;
                    upvoteCount: z.ZodNumber;
                    downvoteCount: z.ZodNumber;
                    replyCount: z.ZodNumber;
                    childCount: z.ZodOptional<z.ZodNumber>;
                    edit: z.ZodOptional<z.ZodObject<{
                        timestamp: z.ZodNumber;
                        signature: z.ZodObject<{
                            type: z.ZodString;
                            signature: z.ZodString;
                            publicKey: z.ZodString;
                            signedPropertyNames: z.ZodArray<z.ZodString>;
                        }, z.core.$strip>;
                        flair: z.ZodOptional<z.ZodObject<{
                            text: z.ZodString;
                            backgroundColor: z.ZodOptional<z.ZodString>;
                            textColor: z.ZodOptional<z.ZodString>;
                            expiresAt: z.ZodOptional<z.ZodNumber>;
                        }, z.core.$loose>>;
                        subplebbitAddress: z.ZodString;
                        protocolVersion: z.ZodString;
                        commentCid: z.ZodString;
                        content: z.ZodOptional<z.ZodString>;
                        deleted: z.ZodOptional<z.ZodBoolean>;
                        spoiler: z.ZodOptional<z.ZodBoolean>;
                        nsfw: z.ZodOptional<z.ZodBoolean>;
                        reason: z.ZodOptional<z.ZodString>;
                        author: z.ZodObject<{
                            address: z.ZodString;
                            previousCommentCid: z.ZodOptional<z.ZodString>;
                            displayName: z.ZodOptional<z.ZodString>;
                            wallets: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
                                address: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$strip>>>;
                            avatar: z.ZodOptional<z.ZodObject<{
                                chainTicker: z.ZodString;
                                address: z.ZodString;
                                id: z.ZodString;
                                timestamp: z.ZodNumber;
                                signature: z.ZodObject<{
                                    signature: z.ZodString;
                                    type: z.ZodString;
                                }, z.core.$strip>;
                            }, z.core.$loose>>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                        }, z.core.$loose>;
                    }, z.core.$loose>>;
                    flair: z.ZodOptional<z.ZodObject<{
                        text: z.ZodString;
                        backgroundColor: z.ZodOptional<z.ZodString>;
                        textColor: z.ZodOptional<z.ZodString>;
                        expiresAt: z.ZodOptional<z.ZodNumber>;
                    }, z.core.$loose>>;
                    spoiler: z.ZodOptional<z.ZodBoolean>;
                    nsfw: z.ZodOptional<z.ZodBoolean>;
                    pinned: z.ZodOptional<z.ZodBoolean>;
                    locked: z.ZodOptional<z.ZodBoolean>;
                    removed: z.ZodOptional<z.ZodBoolean>;
                    reason: z.ZodOptional<z.ZodString>;
                    approved: z.ZodOptional<z.ZodBoolean>;
                    updatedAt: z.ZodNumber;
                    author: z.ZodOptional<z.ZodObject<{
                        subplebbit: z.ZodOptional<z.ZodObject<{
                            postScore: z.ZodNumber;
                            replyScore: z.ZodNumber;
                            banExpiresAt: z.ZodOptional<z.ZodNumber>;
                            flair: z.ZodOptional<z.ZodObject<{
                                text: z.ZodString;
                                backgroundColor: z.ZodOptional<z.ZodString>;
                                textColor: z.ZodOptional<z.ZodString>;
                                expiresAt: z.ZodOptional<z.ZodNumber>;
                            }, z.core.$loose>>;
                            firstCommentTimestamp: z.ZodNumber;
                            lastCommentCid: z.ZodString;
                        }, z.core.$loose>>;
                    }, z.core.$loose>>;
                    lastChildCid: z.ZodOptional<z.ZodString>;
                    lastReplyTimestamp: z.ZodOptional<z.ZodNumber>;
                    signature: z.ZodObject<{
                        type: z.ZodString;
                        signature: z.ZodString;
                        publicKey: z.ZodString;
                        signedPropertyNames: z.ZodArray<z.ZodString>;
                    }, z.core.$strip>;
                    protocolVersion: z.ZodString;
                    replies: z.ZodOptional<z.ZodObject<{
                        pages: z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodObject</*elided*/ any, z.core.$strip>>;
                        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
                            new: "new";
                            best: "best";
                            old: "old";
                            newFlat: "newFlat";
                            oldFlat: "oldFlat";
                        }>, z.ZodString]>, z.ZodString>>;
                    }, z.core.$strip>>;
                }, z.core.$loose>;
            }, z.core.$strip>>>;
            nextCid: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>;
        pageCids: z.ZodOptional<z.ZodRecord<z.ZodUnion<[z.ZodEnum<{
            hot: "hot";
            new: "new";
            topHour: "topHour";
            topDay: "topDay";
            topWeek: "topWeek";
            topMonth: "topMonth";
            topYear: "topYear";
            topAll: "topAll";
            active: "active";
        }>, z.ZodString]>, z.ZodString>>;
    }, z.core.$strip>>;
    modQueue: z.ZodOptional<z.ZodObject<{
        pageCids: z.ZodRecord<z.ZodString, z.ZodString>;
    }, z.core.$strip>>;
    challenges: z.ZodArray<z.ZodObject<{
        exclude: z.ZodOptional<z.ZodArray<z.ZodObject<{
            subplebbit: z.ZodOptional<z.ZodObject<{
                addresses: z.ZodArray<z.ZodString>;
                maxCommentCids: z.ZodNumber;
                postScore: z.ZodOptional<z.ZodNumber>;
                replyScore: z.ZodOptional<z.ZodNumber>;
                firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strict>>;
            postScore: z.ZodOptional<z.ZodNumber>;
            replyScore: z.ZodOptional<z.ZodNumber>;
            firstCommentTimestamp: z.ZodOptional<z.ZodNumber>;
            challenges: z.ZodOptional<z.ZodArray<z.ZodNumber>>;
            role: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodEnum<{
                owner: "owner";
                admin: "admin";
                moderator: "moderator";
            }>, z.ZodString]>>>;
            address: z.ZodOptional<z.ZodArray<z.ZodString>>;
            rateLimit: z.ZodOptional<z.ZodNumber>;
            rateLimitChallengeSuccess: z.ZodOptional<z.ZodBoolean>;
            publicationType: z.ZodOptional<z.ZodObject<{
                post: z.ZodOptional<z.ZodBoolean>;
                reply: z.ZodOptional<z.ZodBoolean>;
                vote: z.ZodOptional<z.ZodBoolean>;
                commentEdit: z.ZodOptional<z.ZodBoolean>;
                commentModeration: z.ZodOptional<z.ZodBoolean>;
                subplebbitEdit: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$loose>>;
        }, z.core.$loose>>>;
        description: z.ZodOptional<z.ZodString>;
        challenge: z.ZodOptional<z.ZodString>;
        type: z.ZodString;
        caseInsensitive: z.ZodOptional<z.ZodBoolean>;
        pendingApproval: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
    signature: z.ZodObject<{
        type: z.ZodString;
        signature: z.ZodString;
        publicKey: z.ZodString;
        signedPropertyNames: z.ZodArray<z.ZodString>;
    }, z.core.$strip>;
    encryption: z.ZodObject<{
        type: z.ZodString;
        publicKey: z.ZodString;
    }, z.core.$loose>;
    address: z.ZodString;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
    pubsubTopic: z.ZodOptional<z.ZodString>;
    statsCid: z.ZodString;
    protocolVersion: z.ZodString;
    postUpdates: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    roles: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodObject<{
        role: z.ZodUnion<[z.ZodEnum<{
            owner: "owner";
            admin: "admin";
            moderator: "moderator";
        }>, z.ZodString]>;
    }, z.core.$loose>>>;
    rules: z.ZodOptional<z.ZodArray<z.ZodString>>;
    lastPostCid: z.ZodOptional<z.ZodString>;
    lastCommentCid: z.ZodOptional<z.ZodString>;
    features: z.ZodOptional<z.ZodObject<{
        noVideos: z.ZodOptional<z.ZodBoolean>;
        noSpoilers: z.ZodOptional<z.ZodBoolean>;
        noImages: z.ZodOptional<z.ZodBoolean>;
        noVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noSpoilerReplies: z.ZodOptional<z.ZodBoolean>;
        noImageReplies: z.ZodOptional<z.ZodBoolean>;
        noPolls: z.ZodOptional<z.ZodBoolean>;
        noCrossposts: z.ZodOptional<z.ZodBoolean>;
        noAuthors: z.ZodOptional<z.ZodBoolean>;
        anonymousAuthors: z.ZodOptional<z.ZodBoolean>;
        noNestedReplies: z.ZodOptional<z.ZodBoolean>;
        safeForWork: z.ZodOptional<z.ZodBoolean>;
        authorFlairs: z.ZodOptional<z.ZodBoolean>;
        requireAuthorFlairs: z.ZodOptional<z.ZodBoolean>;
        postFlairs: z.ZodOptional<z.ZodBoolean>;
        requirePostFlairs: z.ZodOptional<z.ZodBoolean>;
        noMarkdownImages: z.ZodOptional<z.ZodBoolean>;
        noMarkdownVideos: z.ZodOptional<z.ZodBoolean>;
        markdownImageReplies: z.ZodOptional<z.ZodBoolean>;
        markdownVideoReplies: z.ZodOptional<z.ZodBoolean>;
        noPostUpvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyUpvotes: z.ZodOptional<z.ZodBoolean>;
        noPostDownvotes: z.ZodOptional<z.ZodBoolean>;
        noReplyDownvotes: z.ZodOptional<z.ZodBoolean>;
        noUpvotes: z.ZodOptional<z.ZodBoolean>;
        noDownvotes: z.ZodOptional<z.ZodBoolean>;
        requirePostLink: z.ZodOptional<z.ZodBoolean>;
        requirePostLinkIsMedia: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$loose>>;
    suggested: z.ZodOptional<z.ZodObject<{
        primaryColor: z.ZodOptional<z.ZodString>;
        secondaryColor: z.ZodOptional<z.ZodString>;
        avatarUrl: z.ZodOptional<z.ZodString>;
        bannerUrl: z.ZodOptional<z.ZodString>;
        backgroundUrl: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
    }, z.core.$loose>>;
    flairs: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodArray<z.ZodObject<{
        text: z.ZodString;
        backgroundColor: z.ZodOptional<z.ZodString>;
        textColor: z.ZodOptional<z.ZodString>;
        expiresAt: z.ZodOptional<z.ZodNumber>;
    }, z.core.$loose>>>>;
}, z.core.$loose>]>]>;
export declare const ListOfSubplebbitsSchema: z.ZodArray<z.ZodString>;
export declare const SubplebbitIpfsReservedFields: string[];
