import type { PageIpfs, PagesTypeIpfs, PagesTypeJson, PostSort, ReplySort, Timeframe, PageTypeJson } from "./types.js";
import { Comment } from "../publications/comment/comment.js";
import { BasePages } from "./pages.js";
import type { CommentWithinPageJson } from "../publications/comment/types.js";
import { RemoteSubplebbit } from "../subplebbit/remote-subplebbit.js";
export declare const TIMEFRAMES_TO_SECONDS: Record<Timeframe, number>;
export declare const POSTS_SORT_TYPES: PostSort;
export declare const POST_REPLIES_SORT_TYPES: ReplySort;
export declare const REPLY_REPLIES_SORT_TYPES: ReplySort;
type CommentToSort = PageIpfs["comments"][0];
export declare function hotScore(comment: CommentToSort): number;
export declare function bestScore(comment: CommentToSort): number;
export declare function controversialScore(comment: CommentToSort): number;
export declare function topScore(comment: CommentToSort): number;
export declare function newScore(comment: CommentToSort): number;
export declare function oldScore(comment: CommentToSort): number;
export declare function mapPageIpfsCommentToPageJsonComment(pageComment: PageIpfs["comments"][0]): CommentWithinPageJson;
export declare function parsePageIpfs(pageIpfs: PageIpfs): PageTypeJson;
export declare function parsePagesIpfs(pagesRaw: PagesTypeIpfs): Omit<PagesTypeJson, "clients">;
export declare function processAllCommentsRecursively(comments: PageIpfs["comments"], processor: (comment: PageIpfs["comments"][0]) => void): void;
export declare function parseRawPages(pages: PagesTypeIpfs | Omit<PagesTypeJson, "clients"> | BasePages | undefined, pageCreationTimestamp: number): Pick<BasePages, "pages">;
export declare function findCommentInPageInstance(pageInstance: RemoteSubplebbit["posts"] | Comment["replies"], targetCommentCid: string): PageIpfs["comments"][0] | undefined;
export declare function findCommentInParsedPages(pageJson: PageTypeJson, targetCommentCid: string): PageTypeJson["comments"][0] | undefined;
export declare function findCommentInHierarchicalPageIpfsRecursively(page: PageIpfs, targetCid: string): PageIpfs["comments"][0] | undefined;
export declare function findCommentInPageInstanceRecursively(pageInstance: RemoteSubplebbit["posts"] | Comment["replies"], targetCid: string): PageIpfs["comments"][0] | undefined;
export {};
