# CI for the src folder
name: CI

on:
    pull_request:
        branches:
            - master
        paths:
            - "test/**"
            - "src/**"
            - "rpc/**"
            - "config/**"
            - "package.json"
            - "package-lock.json"
    push:
        branches:
            - master
        paths:
            - "test/**"
            - "src/**"
            - "rpc/**"
            - "config/**"
            - ".github/**"
            - "package.json"
            - "package-lock.json"

jobs:
    test-plebbit-js-node-local:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest]
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"

            - run: npm ci
            - run: npm run build

            - run: DEBUG="plebbit*" npm run test:server:node |& tee test_server.log & npm run test:server:wait-on
              shell: bash
            - name: Run mocked challenge tests
              run: npm run test:mocked:challenges
            - run: DEBUG="plebbit*" npm run test:node:local
              shell: bash
            - run: cat test_server.log
              if: ${{ !cancelled() && failure() }}
              shell: bash

    test-plebbit-js-node-remote-configs:
        name: test-plebbit-js-node-${{ matrix.config }}
        runs-on: ubuntu-latest
        timeout-minutes: 30
        strategy:
            fail-fast: false
            matrix:
                config: [remote-kubo-rpc, remote-ipfs-gateway, remote-libp2pjs]
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"

            - run: npm ci
            - run: npm run build

            - run: DEBUG="plebbit*" npm run test:server:node |& tee test_server.log & npm run test:server:wait-on
            - name: Run tests with config
              run: DEBUG="plebbit*, -plebbit*trace" node test/run-test-config.js --plebbit-config ${{ matrix.config }} --environment node
            - run: cat test_server.log
              if: ${{ !cancelled() && failure() }}

    test-plebbit-js-browser-remote-configs:
        name: test-plebbit-js-${{ matrix.environment }}-${{ matrix.config }}
        runs-on: ubuntu-latest
        timeout-minutes: 30
        strategy:
            fail-fast: false
            matrix:
                environment: [chrome, firefox]
                config: [remote-kubo-rpc, remote-ipfs-gateway, remote-libp2pjs]
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"

            - run: npm ci
            - run: npm run build
            - run: npm run webpack

            - run: DEBUG="plebbit*" npm run test:server:node |& tee test_server.log & npm run test:server:wait-on

            # Install Chrome
            - name: Install Chrome
              id: setup-chrome
              uses: browser-actions/setup-chrome@v1
              with:
                  chrome-version: latest
              if: matrix.environment == 'chrome'

            - name: Debug Chrome installation
              run: |
                  echo "Chrome path from setup-chrome: ${{ steps.setup-chrome.outputs.chrome-path }}"
                  echo "Chrome version from setup-chrome path:"
                  ${{ steps.setup-chrome.outputs.chrome-path }} --version || echo "Failed to get version from setup-chrome path"
                  echo "System Chrome at /usr/bin/google-chrome:"
                  /usr/bin/google-chrome --version || echo "No system Chrome found"
              if: matrix.environment == 'chrome'

            # Run tests based on environment and config
            - name: Run browser tests with config
              run: DEBUG="plebbit*, -plebbit*trace" node test/run-test-config.js --plebbit-config ${{ matrix.config }} --environment ${{ matrix.environment }}
              env:
                  CHROME_BIN: ${{ matrix.environment == 'chrome' && steps.setup-chrome.outputs.chrome-path || '' }}

            - run: cat test_server.log
              if: ${{ !cancelled() && failure() }}

    test-plebbit-rpc:
        runs-on: ubuntu-latest
        timeout-minutes: 20
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"

            # Setup plebbit-js deps
            - run: npm ci
            - run: npm run build
            - run: npm run webpack
            # Setup tests for plebbit-js using rpc here
            - run: DEBUG="plebbit*" npm run test:server:node:rpc |& tee test_server.log & npm run test:server:wait-on
            - run: DEBUG="plebbit*, -plebbit*trace" npm run test:node:rpc
            - run: cat test_server.log
              if: ${{ !cancelled() && failure() }}

            # Setup tests for rpc directory here (skipped for now)

    test-plebbit-react-hooks:
        uses: ./.github/workflows/CI-plebbit-react-hooks.yml
        secrets: inherit

    test-plebbit-protocol-test:
        uses: ./.github/workflows/CI-plebbit-protocol-test.yml
        secrets: inherit
